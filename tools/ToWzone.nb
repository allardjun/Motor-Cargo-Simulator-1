(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    371370,       7515]
NotebookOptionsPosition[    366536,       7349]
NotebookOutlinePosition[    367059,       7371]
CellTagsIndexPosition[    366970,       7366]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ToW Zone Extent", "Title",
 CellChangeTimes->{{3.695687494844253*^9, 3.695687501998787*^9}}],

Cell["\<\
We want to find how far the ToW zone extends for the various experimental \
geometries. The setup is like this:\
\>", "Text",
 CellChangeTimes->{{3.695687504878558*^9, 3.695687549090725*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.23272529910237286`, 0.0019104154787131788`}, {
      0.8281443762355922, 0.9900018891745468}}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.21120919139681288`, 0.013317692709200413`}, {
      0.8066282685300321, 1.0014091664050335`}}]}}, 
   {EdgeForm[Thickness[0.0016982436524617425`]], FaceForm[RGBColor[1, 1, 0]], 
    DiskBox[{0.5775869364002384, 0.23622415948617703}, \
{0.18516284668375627, 0.18516284668375527}]}, 
   {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[{
    GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.6833437754770225, 1.0013925793980725`}, {
     0.6890193786715534, -0.15221759103774546`}}]}, 
   {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[{
    GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7076533212994957, 1.0028468305852893`}, {
     0.7133289244940267, -0.1507633398505276}}]}, 
   {Thickness[0.0016982436524617425`], StrokeForm[{RGBColor[0, 0, 1], Opacity[
    1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.6398396605683361, 0.2002413478477374}, {0.6944159149621936, 
     0.16351582475546877`}}]}, InsetBox[
    StyleBox[Cell["\[Theta]",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.6222612706605902, 0.5863946698881617}, {
    Left, Baseline},
    Alignment->{Left, Top}], GeometricTransformationBox[GraphicsGroupBox[{
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.7876680150580547, 0.8021494945057634}, {0.8458623908626666,
         0.8021494945057639}}]}, 
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.7908040927644477, 0.17057761182191566`}, {
        0.8489984685690596, 0.1705776118219161}}]}, 
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.8127688393461834, 0.8038425972205501}, {0.8196023160605018,
         0.1655781914998422}}]}}], {{{{1.0000000000000007`, 0.}, {0., 
      1.0000000000000007`}}, {-0.02396597904807224, \
-0.011458276133472946`}}}], InsetBox[
    StyleBox[Cell["d",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.8586995649759928, 0.4557166303638214}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {Thickness[0.0016982436524617425`], Dashing[{Small, Small}], StrokeForm[
    Opacity[1.]], EdgeForm[Opacity[1.]], EdgeForm[None], 
    LineBox[{{0.6974051092441079, 0.17073624610278282`}, {
     0.42756819748747743`, 0.35077395225108116`}}]}, 
   {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
    Opacity[1.]], EdgeForm[None], 
    LineBox[{{0.45100018091028654`, 0.3286609210796624}, {0.4390425374299249, 
     0.31340226133781923`}}]}, 
   {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
    Opacity[1.]], EdgeForm[None], 
    LineBox[{{0.4382328542610223, 0.31138347868908334`}, {
     0.42311226183274775`, 0.3235152394573638}}]}, InsetBox[
    StyleBox[Cell["a",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.5407354529313788, 0.2152270605677885}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {RGBColor[0, 0, 1], AbsolutePointSize[7.673614893618192], 
    PointBox[{0.6980152410936008, 0.7912525396738241}]}, 
   {RGBColor[0, 0, 1], AbsolutePointSize[7.673614893618192], 
    PointBox[{0.700895063423207, 0.17162703860304196`}]}, 
   {RGBColor[0, 0, 1], AbsolutePointSize[7.673614893618192], 
    PointBox[{0.4207591260471394, 0.34159756923471174`}]}},
  ContentSelectable->True,
  ImageMargins->0.,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{426.8203125, 322.},
  PlotRange->{{0., 1.3333333333333335`}, {0., 1.}},
  PlotRangePadding->Automatic]], "Text",
 CellChangeTimes->{
  3.6908451797103*^9, {3.6908452943202257`*^9, 3.690845296750163*^9}, 
   3.6908469615703373`*^9, 3.690847008370179*^9, 3.690847047082306*^9, {
   3.690847271073945*^9, 3.690847272644945*^9}, 3.69084731650799*^9, {
   3.690847349598518*^9, 3.690847369607806*^9}, 3.692466798092507*^9, {
   3.692467083537381*^9, 3.692467153836515*^9}, {3.692467213307292*^9, 
   3.6924672178520613`*^9}, 3.692467293202318*^9, {3.692468412750144*^9, 
   3.6924684418664513`*^9}, {3.692479760944213*^9, 3.6924797849397097`*^9}, 
   3.692480175696438*^9, 3.692480206746278*^9, {3.6924802393624372`*^9, 
   3.692480239901291*^9}, {3.6924803187397118`*^9, 3.692480350206286*^9}, {
   3.692480490887179*^9, 3.692480508029414*^9}, {3.6924807384194613`*^9, 
   3.692480755496245*^9}, 3.692480962114046*^9, {3.695676437972427*^9, 
   3.6956764397250338`*^9}, {3.695687881370714*^9, 3.695687894322732*^9}, {
   3.695689586934371*^9, 3.695689646849505*^9}, {3.695766238201007*^9, 
   3.6957662651345863`*^9}}],

Cell["\<\
Above is a top down view, below is a view looking through side a\
\>", "Text",
 CellChangeTimes->{{3.6956875748201*^9, 3.695687608209372*^9}, {
   3.695691464123711*^9, 3.695691489940728*^9}, 3.695691547934381*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[Thickness[0.0016982436524617425`]], FaceForm[RGBColor[1, 1, 0]], 
    GeometricTransformationBox[
     DiskBox[{0.6954644097222225, 0.5765190972222224}, \
{0.18516284668375582, 0.18516284668375604}], {{{{-0.6120294334169604, 
       0.7908349844508152}, {-0.7908349844508152, -0.6120294334169604}}, {
       0.5493679573821294, 1.476888214468835}}}]}, 
   {Thickness[0.0016982436524617425`], StrokeForm[{RGBColor[0, 0, 1], Opacity[
    1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7514209419875797, 0.7623064498395365}, {0.709710095211426, 
     0.7114386127390646}}]}, 
   {Thickness[0.0016982436524617425`], Dashing[{Small, Small}], StrokeForm[
    Opacity[1.]], EdgeForm[Opacity[1.]], EdgeForm[None], 
    LineBox[{{0.7085547173533943, 0.7048563310023674}, {0.47111784896077424`, 
     0.42583794963253974`}}]}, 
   {Thickness[0.0016982436524617425`], StrokeForm[{RGBColor[0, 0, 1], Opacity[
    1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.4690443659095137, 0.4218246911355553}, {0.42733351913336104`, 
     0.3709568540350834}}]}, 
   {AbsolutePointSize[7.673614893618192], 
    PointBox[{0.5857587367305865, 0.5672923628366394}]}, InsetBox[
    StyleBox[Cell["L",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.6916034214954796, 0.7506371397171424}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["R",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.5922716558911668, 0.6521417844411798}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {Thickness[0.0016982436524617425`], Dashing[{Small, Small}], StrokeForm[
    Opacity[1.]], EdgeForm[Opacity[1.]], EdgeForm[None], 
    LineBox[{{0.7567380262824073, 0.7598934073330824}, {0.748664238172664, 
     0.35274268659489044`}}]}, {
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.23182768353118505`, 0.3386854323059157}, {0.7238248378857742,
       0.3386854323059146}}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.2331776282522861, 0.3870776413368967}, {0.7195005564065916, 
      0.38707764133689626`}}]}}, 
   {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[{
    GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    CircleBox[{0.7548551241923394, 0.7664445786734504}, \
{0.024625931256523015, 0.024625931256523126}]}, 
   GeometricTransformationBox[GraphicsGroupBox[{
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.3125898128163799, 0.24937037830387387`}, {
        0.31189225744045657`, 0.30756057328366326`}}]}, 
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.9440787307944318, 0.26007665922260903`}, {
        0.9433811754185085, 0.3182668542023984}}]}, 
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.31452520615647805`, 0.278384087286783}, {
        0.9526618469516912, 0.2841775413669275}}]}}], {{{{0.5135960254854371, 
      0.}, {0., 1.0000000000000007`}}, {0.263130614953076, 0.}}}], InsetBox[
    StyleBox[Cell["s",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.80467849102191, 0.5658820371082194}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["a",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.5885331820206349, 0.23523938523114873}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[{
    GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    CircleBox[{0.23244803201972014, 0.3618417440008781}, 
     0.024625931256523237]}, 
   {RGBColor[1, 0, 0], AbsolutePointSize[7.673614893618192], 
    PointBox[{0.7564414670010196, 0.7635891616178263}]}, 
   {RGBColor[1, 0, 0], AbsolutePointSize[7.673614893618192], 
    PointBox[{0.41970969926601176`, 0.3655391430088045}]}, 
   {RGBColor[1, 0, 0], AbsolutePointSize[7.673614893618192], 
    PointBox[{0.7505353906979305, 0.3602187932812281}]}},
  ContentSelectable->True,
  ImageMargins->0.,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{426.8203125, 322.},
  PlotRange->{{0., 1.3333333333333335`}, {0., 1.}},
  PlotRangePadding->Automatic]], "Text",
 CellChangeTimes->{
  3.6908451797103*^9, {3.6908452943202257`*^9, 3.690845296750163*^9}, 
   3.6908469615703373`*^9, 3.690847008370179*^9, 3.690847047082306*^9, {
   3.690847271073945*^9, 3.690847272644945*^9}, 3.69084731650799*^9, {
   3.690847349598518*^9, 3.690847369607806*^9}, 3.692466798092507*^9, {
   3.692467083537381*^9, 3.6924671260049887`*^9}, {3.692468668810134*^9, 
   3.692468673793214*^9}, 3.692468716812868*^9, 3.692479952047388*^9, 
   3.6924799860000668`*^9, {3.692480040260827*^9, 3.6924800420112953`*^9}, {
   3.69248007758803*^9, 3.692480077991335*^9}, {3.692480138155777*^9, 
   3.6924801442757397`*^9}, 3.6956762608833523`*^9, {3.695676449069737*^9, 
   3.6956764490697927`*^9}, {3.6956770388857737`*^9, 3.695677039999527*^9}, {
   3.6956895980351954`*^9, 3.695689598035263*^9}, {3.695766238202566*^9, 
   3.695766265136022*^9}}],

Cell[CellGroupData[{

Cell["Derivation of ToW zone extent", "Section",
 CellChangeTimes->{{3.6956881637775507`*^9, 3.695688176692659*^9}}],

Cell["\<\
To find d, the extent of the ToW zone, we can use some trig. Pythagorean \
theorem on the red triangle gives\
\>", "Text",
 CellChangeTimes->{{3.69568762037121*^9, 3.6956876501830053`*^9}, {
  3.695687817178157*^9, 3.695687853458796*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq1", "=", 
  RowBox[{"a", "\[Equal]", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "R"}], "+", 
        RowBox[{"2", "L"}]}], ")"}], "^", "2"}], "-", 
     RowBox[{"s", "^", "2"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6956892768279037`*^9, 3.6956893031289988`*^9}, {
  3.695689391351692*^9, 3.695689394895021*^9}, {3.695689452293013*^9, 
  3.695689456263582*^9}, {3.695766101240234*^9, 3.6957661013836*^9}}],

Cell[BoxData[
 RowBox[{"a", "\[Equal]", 
  SqrtBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "L"}], "+", 
       RowBox[{"2", " ", "R"}]}], ")"}], "2"], "-", 
    SuperscriptBox["s", "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.695689304284389*^9, 3.6956894210783787`*^9, {3.6956894544573317`*^9, 
   3.695689456868249*^9}, 3.695689528512208*^9, 3.6956896359168243`*^9, 
   3.695689721374729*^9, 3.695762154906661*^9, 3.695766130919977*^9, {
   3.6957662459580297`*^9, 3.695766292685261*^9}, 3.696202724426291*^9, 
   3.696628863742401*^9}]
}, Open  ]],

Cell["Then the sine of \[Theta] in the blue triangle is", "Text",
 CellChangeTimes->{{3.695689662002348*^9, 3.695689692523468*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq2", "=", 
  RowBox[{
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "\[Equal]", 
   RowBox[{"a", "/", "d"}]}]}]], "Input",
 CellChangeTimes->{{3.695688849472933*^9, 3.6956888747755213`*^9}, {
  3.695766099218698*^9, 3.6957660993599873`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", "\[Theta]", "]"}], "\[Equal]", 
  FractionBox["a", "d"]}]], "Output",
 CellChangeTimes->{
  3.695688878758451*^9, 3.695689721432137*^9, 3.695762155058161*^9, 
   3.695766133359432*^9, {3.695766245994444*^9, 3.6957662927201653`*^9}, 
   3.6962027245746393`*^9, 3.6966288639050083`*^9}]
}, Open  ]],

Cell["Solve this to find", "Text",
 CellChangeTimes->{{3.695689704527677*^9, 3.6956897076470327`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq1", ",", "eq2"}], "}"}], ",", "d", ",", 
     RowBox[{"{", "a", "}"}]}], "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.695688887710834*^9, 3.695688933387231*^9}, {
  3.695689326922907*^9, 3.6956893498012667`*^9}, {3.695766148189456*^9, 
  3.6957661488213377`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"d", "\[Rule]", 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "L"}], "+", 
         RowBox[{"2", " ", "R"}], "-", "s"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "L"}], "+", 
         RowBox[{"2", " ", "R"}], "+", "s"}], ")"}]}]], " ", 
     RowBox[{"Csc", "[", "\[Theta]", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.695688909074484*^9, 3.6956889341316547`*^9}, {
   3.69568930942068*^9, 3.695689350675012*^9}, {3.695689459741926*^9, 
   3.695689477148728*^9}, 3.6956895341625*^9, 3.6956897214555902`*^9, 
   3.6957621551402397`*^9, 3.695766149244194*^9, {3.695766246016173*^9, 
   3.695766292749642*^9}, 3.696202724653552*^9, 3.696628863961616*^9}]
}, Open  ]],

Cell["So our solution is", "Text",
 CellChangeTimes->{{3.695688099675167*^9, 3.695688104706279*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToWzone", "=", 
  RowBox[{
   RowBox[{"d", "/.", 
    RowBox[{"soln", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.695688106943503*^9, 3.6956881270167847`*^9}, {
  3.695689737344041*^9, 3.6956897425300407`*^9}, {3.696631563537609*^9, 
  3.696631568820386*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"L", "+", "R"}], ")"}], "2"]}], "-", 
    SuperscriptBox["s", "2"]}]], " ", 
  RowBox[{"Csc", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{
  3.695688131288561*^9, 3.6956886137898617`*^9, {3.695689721549684*^9, 
   3.6956897431735573`*^9}, 3.695762155180294*^9, 3.695766169342826*^9, {
   3.69576624603202*^9, 3.695766292784095*^9}, 3.696202724681589*^9, 
   3.6966288639901667`*^9, {3.696631564865789*^9, 3.6966315698336277`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", "ToWzone", "]"}]], "Input",
 CellChangeTimes->{{3.6956949134034557`*^9, 3.695694920483417*^9}}],

Cell["Sqrt((2*L + 2*R - s)*(2*L + 2*R + s))*Csc(\[Theta])", "Output",
 CellChangeTimes->{
  3.69569492089522*^9, 3.6957621552124577`*^9, {3.695766246072628*^9, 
   3.695766292816229*^9}, 3.696202724726252*^9, 3.696628864032172*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing", "Section",
 CellChangeTimes->{{3.695688149693183*^9, 3.6956881507161303`*^9}}],

Cell["\<\
We should make sure this function behaves as it should. First, as \[Theta] \
gets close to 0 or \[Pi], the ToW zone should become infinitely long\
\>", "Text",
 CellChangeTimes->{{3.695688480306971*^9, 3.6956885302787247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"ToWzone", ",", 
     RowBox[{"\[Theta]", "\[Rule]", "0"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "<", "L", "<", "Infinity"}], ",", 
      RowBox[{"0", "<", "R", "<", "Infinity"}], ",", 
      RowBox[{"0", "<", "s", "<", 
       RowBox[{
        RowBox[{"2", "L"}], "+", 
        RowBox[{"2", "R"}]}]}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695688531628203*^9, 3.695688544813567*^9}, {
  3.69568975816679*^9, 3.6956898076667633`*^9}, {3.695689844230057*^9, 
  3.695689846378047*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{
  3.695688545233322*^9, 3.695688615545515*^9, {3.695689749025111*^9, 
   3.695689760542692*^9}, 3.695689808227399*^9, 3.6956898474907846`*^9, 
   3.6957621602149887`*^9, 3.695766176636894*^9, 3.6957662116441*^9, {
   3.6957662461080723`*^9, 3.695766292831526*^9}, 3.6962027248016768`*^9, 
   3.6966288640848083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"ToWzone", ",", 
     RowBox[{"\[Theta]", "\[Rule]", "Pi"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "<", "L", "<", "Infinity"}], ",", 
      RowBox[{"0", "<", "R", "<", "Infinity"}], ",", 
      RowBox[{"0", "<", "s", "<", 
       RowBox[{
        RowBox[{"2", "L"}], "+", 
        RowBox[{"2", "R"}]}]}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695689861667713*^9, 3.6956898621955023`*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[Infinity]"}]], "Output",
 CellChangeTimes->{
  3.695689862734614*^9, 3.695762160294621*^9, 3.695766176720018*^9, 
   3.695766211706644*^9, {3.695766246138174*^9, 3.6957662928658237`*^9}, 
   3.696202724828808*^9, 3.696628864113764*^9}]
}, Open  ]],

Cell["\<\
The situation is somewhat more simple for case where s\[Rule]0, where the \
geometry looks like this\
\>", "Text",
 CellChangeTimes->{{3.6956881993954687`*^9, 3.695688240480364*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.23272529910237286`, 0.0019104154787131788`}, {
      0.8281443762355922, 0.9900018891745468}}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.21120919139681288`, 0.013317692709200413`}, {
      0.8066282685300321, 1.0014091664050335`}}]}}, 
   {EdgeForm[Thickness[0.0016982436524617425`]], FaceForm[RGBColor[1, 1, 0]], 
    DiskBox[{0.5569048902371527, 0.2642428375495964}, \
{0.12271117410440147, 0.12271117410440052}]}, 
   {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[{
    GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.6833437754770225, 1.0013925793980725`}, {
     0.6890193786715534, -0.15221759103774546`}}]}, 
   {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[{
    GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7076533212994957, 1.0028468305852893`}, {
     0.7133289244940267, -0.1507633398505276}}]}, 
   {Thickness[0.0016982436524617425`], StrokeForm[{RGBColor[0, 0, 1], Opacity[
    1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.660850403917412, 0.19706190839901133`}, {0.6972345735133171, 
     0.17563868659518792`}}]}, InsetBox[
    StyleBox[Cell["\[Theta]",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.6222612706605902, 0.5863946698881617}, {
    Left, Baseline},
    Alignment->{Left, Top}], GeometricTransformationBox[GraphicsGroupBox[{
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.7876680150580547, 0.8021494945057634}, {0.8458623908626666,
         0.8021494945057639}}]}, 
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.7908040927644477, 0.17057761182191566`}, {
        0.8489984685690596, 0.1705776118219161}}]}, 
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.8127688393461834, 0.8038425972205501}, {0.8196023160605018,
         0.1655781914998422}}]}}], {{{{1.000000000000001, 0.}, {0., 
      0.9804878048780498}}, {-0.035643902647361975`, 
      0.0032951286626702516`}}}], InsetBox[
    StyleBox[Cell["d",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.8471314651096117, 0.4643805026266179}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {Thickness[0.0016982436524617425`], Dashing[{Small, Small}], StrokeForm[
    Opacity[1.]], EdgeForm[Opacity[1.]], EdgeForm[None], 
    LineBox[{{0.6974051092441079, 0.17073624610278282`}, {
     0.42756819748747743`, 0.35077395225108116`}}]}, 
   {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
    Opacity[1.]], EdgeForm[None], 
    LineBox[{{0.45100018091028654`, 0.3286609210796624}, {0.4390425374299249, 
     0.31340226133781923`}}]}, 
   {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
    Opacity[1.]], EdgeForm[None], 
    LineBox[{{0.4382328542610223, 0.31138347868908334`}, {
     0.42311226183274775`, 0.3235152394573638}}]}, 
   {Thickness[0.0016982436524617425`], StrokeForm[{RGBColor[0, 0, 1], Opacity[
    1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.4283413587127437, 0.35352411988291377`}, {
     0.46472552830864877`, 0.33210089807909027`}}]}, InsetBox[
    StyleBox[Cell["L",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.6528898895051223, 0.15715471113307578}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["L",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.4719247829455949, 0.37631407147084495}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["R",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.5203936570692929, 0.3215730419343621}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["R",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.6076425115467454, 0.27541046620174625}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {AbsolutePointSize[7.673614893618192], 
    PointBox[{0.5530235083801613, 0.2684671657545198}]}},
  ContentSelectable->True,
  ImageMargins->0.,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{426.8203125, 322.},
  PlotRange->{{0., 1.3333333333333335`}, {0., 1.}},
  PlotRangePadding->Automatic]], "Text",
 CellChangeTimes->{
  3.6908451797103*^9, {3.6908452943202257`*^9, 3.690845296750163*^9}, 
   3.6908469615703373`*^9, 3.690847008370179*^9, 3.690847047082306*^9, {
   3.690847271073945*^9, 3.690847272644945*^9}, 3.69084731650799*^9, {
   3.690847349598518*^9, 3.690847369607806*^9}, 3.692466798092507*^9, {
   3.692467083537381*^9, 3.692467153836515*^9}, {3.692467213307292*^9, 
   3.6924672178520613`*^9}, 3.692467293202318*^9, {3.692468412750144*^9, 
   3.6924684418664513`*^9}, {3.692479760944213*^9, 3.6924797849397097`*^9}, 
   3.692480175696438*^9, 3.692480206746278*^9, {3.6924802393624372`*^9, 
   3.692480239901291*^9}, {3.6924803187397118`*^9, 3.692480350206286*^9}, {
   3.692480490887179*^9, 3.692480508029414*^9}, {3.6924807384194613`*^9, 
   3.692480755496245*^9}, 3.692480962114046*^9, {3.6924824485811768`*^9, 
   3.692482496754384*^9}, {3.695688307588745*^9, 3.695688337198329*^9}, 
   3.6957662054357767`*^9, 3.6957662818799353`*^9}],

Cell["From this we can see that in this geometry", "Text",
 CellChangeTimes->{{3.695688259447825*^9, 3.695688269018119*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "==", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "L"}], "+", 
       RowBox[{"2", "R"}]}], ")"}], "/", "d"}]}], ",", "d"}], "]"}]], "Input",\

 CellChangeTimes->{{3.695688277749359*^9, 3.6956882935682096`*^9}, {
  3.6956883758059187`*^9, 3.695688375919819*^9}, {3.695688432944482*^9, 
  3.695688442226112*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"d", "\[Rule]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"L", "+", "R"}], ")"}], " ", 
     RowBox[{"Csc", "[", "\[Theta]", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.695688438915739*^9, 3.695688442594328*^9}, 
   3.695762160380094*^9, 3.6957661768071957`*^9, 3.695766211736127*^9, {
   3.695766246153776*^9, 3.695766292899193*^9}, 3.696202724879285*^9, 
   3.696628864166108*^9}]
}, Open  ]],

Cell["The full solution should match this", "Text",
 CellChangeTimes->{{3.695689892064578*^9, 3.695689904678162*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"ToWzone", ",", 
     RowBox[{"s", "\[Rule]", "0"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"L", ">", "0"}], ",", 
      RowBox[{"R", ">", "0"}], ",", 
      RowBox[{"s", ">", "0"}], ",", 
      RowBox[{"0", "<", "\[Theta]", "<", "Pi"}]}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.6956872681491213`*^9, 3.695687290780513*^9}, {
  3.695687420414588*^9, 3.695687438121937*^9}, {3.6956881368008213`*^9, 
  3.69568814367202*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{"L", "+", "R"}], ")"}], " ", 
  RowBox[{"Csc", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{
  3.695687291305614*^9, {3.695687423009468*^9, 3.695687438627438*^9}, {
   3.6956881407555637`*^9, 3.695688144051959*^9}, 3.695689883325389*^9, 
   3.695762160553409*^9, 3.695766176844928*^9, 3.6957662117798*^9, {
   3.695766246187455*^9, 3.695766292936655*^9}, 3.696202725054167*^9, 
   3.696628864278946*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Limit", "[", 
     RowBox[{"ToWzone", ",", 
      RowBox[{"s", "\[Rule]", "0"}]}], "]"}], "/.", 
    RowBox[{"\[Theta]", "\[Rule]", 
     RowBox[{"Pi", "/", "2"}]}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"L", ">", "0"}], ",", 
      RowBox[{"R", ">", "0"}], ",", 
      RowBox[{"s", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6956872681491213`*^9, 3.695687290780513*^9}, {
  3.695687420414588*^9, 3.695687438121937*^9}, {3.6956881368008213`*^9, 
  3.69568814367202*^9}, {3.69576656395997*^9, 3.695766580219219*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{"L", "+", "R"}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.695687291305614*^9, {3.695687423009468*^9, 3.695687438627438*^9}, {
   3.6956881407555637`*^9, 3.695688144051959*^9}, 3.695689883325389*^9, 
   3.695762160553409*^9, 3.695766176844928*^9, 3.6957662117798*^9, {
   3.695766246187455*^9, 3.695766292936655*^9}, {3.695766569857263*^9, 
   3.695766580494375*^9}, 3.696202725082262*^9, 3.696628864307686*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[Thickness[0.0016982436524617425`]], FaceForm[RGBColor[1, 1, 0]], 
    GeometricTransformationBox[
     DiskBox[{0.6954644097222225, 0.5765190972222224}, \
{0.18516284668375582, 0.18516284668375604}], {{{{0.6868470352815104, 
       0.7268020020094947}, {-0.7268020020094947, 
       0.6868470352815104}}, {-0.30981420089582656`, 
       0.6588913409127845}}}]}, 
   {Thickness[0.0016982436524617425`], StrokeForm[{RGBColor[0, 0, 1], Opacity[
    1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.4158405737170862, 0.7378469849547814}, {0.4596577813276637, 
     0.6887818862870366}}]}, 
   {Thickness[0.0016982436524617425`], Dashing[{Small, Small}], StrokeForm[
    Opacity[1.]], EdgeForm[Opacity[1.]], EdgeForm[None], 
    LineBox[{{0.4659827192629716, 0.6866239958888493}, {0.7049922094662249, 
     0.4089515499978068}}]}, 
   {Thickness[0.0016982436524617425`], StrokeForm[{RGBColor[0, 0, 1], Opacity[
    1.]}], EdgeForm[{RGBColor[0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7086371702773375, 0.4062832478385797}, {0.7524543778879154, 
     0.35721814917083644`}}]}, 
   {AbsolutePointSize[7.673614893618192], 
    PointBox[{0.5829359578043138, 0.5440594905261529}]}, InsetBox[
    StyleBox[Cell["L",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.7503957265125945, 0.4052292970823491}, {
    Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["R",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.5879397197597691, 0.6171690268282598}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {Thickness[0.0016982436524617425`], Dashing[{Small, Small}], StrokeForm[
    Opacity[1.]], EdgeForm[Opacity[1.]], EdgeForm[None], 
    LineBox[{{0.4168335729300388, 0.7432107348348453}, {0.40875978482029535`, 
     0.3413169398504583}}]}, {
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.15196044423337723`, 0.7397739075254102}, {
      1.1439794743560303`, 0.7397739075254091}}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{0.1601598730072471, 0.7893619749813975}, {1.1436887412417656`, 
      0.789361974981397}}]}}, GeometricTransformationBox[GraphicsGroupBox[{
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.3125898128163799, 0.24937037830387387`}, {
        0.31189225744045657`, 0.30756057328366326`}}]}, 
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.9440787307944318, 0.26007665922260903`}, {
        0.9433811754185085, 0.3182668542023984}}]}, 
      {Thickness[0.0016982436524617425`], StrokeForm[Opacity[1.]], EdgeForm[
       Opacity[1.]], EdgeForm[None], 
       LineBox[{{0.31452520615647805`, 0.278384087286783}, {
        0.9526618469516912, 0.2841775413669275}}]}}], {{{{0.5135960254854376, 
      0.}, {0., 1.0000000000000016`}}, {0.2576028203966726, 
      0.552706239818425}}}], InsetBox[
    StyleBox[Cell["s",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.3526073984588078, 0.5221355834995949}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[{
    GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    CircleBox[{0.758674549570163, 0.3516525421143505}, \
{0.02462593125652346, 0.024625931256523348}]}, InsetBox[
    StyleBox[Cell["d",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontColor->GrayLevel[0.4],
     Background->GrayLevel[1.]], {0.5756960079073097, 0.8599777912006794}, {
    Left, Baseline},
    Alignment->{Left, Top}]},
  ContentSelectable->True,
  ImageMargins->0.,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{426.8203125, 322.},
  PlotRange->{{0., 1.3333333333333335`}, {0., 1.}},
  PlotRangePadding->Automatic]], "Text",
 CellChangeTimes->{
  3.6908451797103*^9, {3.6908452943202257`*^9, 3.690845296750163*^9}, 
   3.6908469615703373`*^9, 3.690847008370179*^9, 3.690847047082306*^9, {
   3.690847271073945*^9, 3.690847272644945*^9}, 3.69084731650799*^9, {
   3.690847349598518*^9, 3.690847369607806*^9}, 3.692466798092507*^9, {
   3.692467083537381*^9, 3.6924671260049887`*^9}, {3.692468668810134*^9, 
   3.692468673793214*^9}, 3.692468716812868*^9, 3.692479952047388*^9, 
   3.6924799860000668`*^9, {3.692480040260827*^9, 3.6924800420112953`*^9}, {
   3.69248007758803*^9, 3.692480077991335*^9}, {3.692480138155777*^9, 
   3.6924801442757397`*^9}, 3.6956762608833523`*^9, {3.695676449069737*^9, 
   3.6956764490697927`*^9}, {3.6956770388857737`*^9, 3.695677039999527*^9}, {
   3.6956895980351954`*^9, 3.695689598035263*^9}, {3.695766238202566*^9, 
   3.695766265136022*^9}, {3.695766656421701*^9, 3.695766681958432*^9}, 
   3.695766791317676*^9, {3.695766836816408*^9, 3.695766845999922*^9}, {
   3.695767029461491*^9, 3.69576703353063*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "R"}], "+", 
       RowBox[{"2", "L"}]}], ")"}], "^", "2"}], "-", 
    RowBox[{"s", "^", "2"}]}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.695766873953781*^9, 3.695766963795456*^9}, {
  3.69576699777985*^9, 3.695767004224184*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"L", "+", "R"}], ")"}], "2"]}], "-", 
   SuperscriptBox["s", "2"]}]]], "Output",
 CellChangeTimes->{
  3.695766964744362*^9, {3.69576700002363*^9, 3.69576700452559*^9}, 
   3.6962027251284313`*^9, 3.696628864349424*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToWzone", "/.", 
   RowBox[{"\[Theta]", "\[Rule]", 
    RowBox[{"Pi", "/", "2"}]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.6957669801887293`*^9, 3.695767015246233*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"L", "+", "R"}], ")"}], "2"]}], "-", 
   SuperscriptBox["s", "2"]}]]], "Output",
 CellChangeTimes->{{3.695766991313046*^9, 3.695767015726501*^9}, 
   3.696202725196474*^9, 3.6966288644016047`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Investigation of ToW zone", "Section",
 CellChangeTimes->{{3.695689945738264*^9, 3.695689958763259*^9}}],

Cell["We can plot the extent of the ToW zone as a function of \[Theta]", \
"Text",
 CellChangeTimes->{{3.6956940321069727`*^9, 3.695694047654654*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ToWzone", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"L", "\[Rule]", ".057"}], ",", 
      RowBox[{"R", "\[Rule]", ".5"}], ",", 
      RowBox[{"s", "\[Rule]", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695689961905361*^9, 3.695689988914958*^9}, {
  3.695690032644191*^9, 3.695690080140829*^9}, {3.695692649710938*^9, 
  3.6956926628624563`*^9}, {3.695692916425919*^9, 3.69569291655448*^9}, {
  3.695693520152185*^9, 3.695693589896064*^9}, {3.6956936615453167`*^9, 
  3.695693671432954*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
PwiZ2IY=
       "]]},
     Annotation[#, "Charting`Private`Tag$2614#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 3.1415925894756573`}, {0, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.695690064429098*^9, 3.6956900805284243`*^9}, {
   3.695692653765637*^9, 3.695692663999613*^9}, 3.695692917025124*^9, {
   3.695693532991516*^9, 3.6956935902580767`*^9}, 3.695693672614715*^9, 
   3.695762167706134*^9, {3.69576624624503*^9, 3.695766293001133*^9}, 
   3.696202725373189*^9, 3.696628864464428*^9}]
}, Open  ]],

Cell["\<\
As well as find the values for each of the experimental geometries\
\>", "Text",
 CellChangeTimes->{{3.695694055181292*^9, 3.695694074042844*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ToWzone", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"L", "\[Rule]", ".057"}], ",", 
       RowBox[{"R", "\[Rule]", ".5"}]}], "}"}]}], "/.", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Theta]", "\[Rule]", 
           RowBox[{"30", "\[Degree]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Theta]", "\[Rule]", 
           RowBox[{"90", "\[Degree]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "\[Rule]", "0"}], ",", 
          RowBox[{"\[Theta]", "\[Rule]", 
           RowBox[{"150", "\[Degree]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "\[Rule]", ".5"}], ",", 
          RowBox[{"\[Theta]", "\[Rule]", 
           RowBox[{"30", "\[Degree]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "\[Rule]", ".5"}], ",", 
          RowBox[{"\[Theta]", "\[Rule]", 
           RowBox[{"90", "\[Degree]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "\[Rule]", ".5"}], ",", 
          RowBox[{"\[Theta]", "\[Rule]", 
           RowBox[{"150", "\[Degree]"}]}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "\[Rule]", "1"}], ",", 
          RowBox[{"\[Theta]", "\[Rule]", 
           RowBox[{"30", "\[Degree]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "\[Rule]", "1"}], ",", 
          RowBox[{"\[Theta]", "\[Rule]", 
           RowBox[{"90", "\[Degree]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "\[Rule]", "1"}], ",", 
          RowBox[{"\[Theta]", "\[Rule]", 
           RowBox[{"150", "\[Degree]"}]}]}], "}"}]}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", ".5", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Acute\>\"", ",", "\"\<Normal\>\"", ",", "\"\<Obtuse\>\""}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695693053117572*^9, 3.695693086108108*^9}, {
  3.695693157861637*^9, 3.6956931900470867`*^9}, {3.69569322009614*^9, 
  3.6956932569739943`*^9}, {3.695693288182329*^9, 3.695693431100193*^9}, {
  3.695693732804133*^9, 3.69569377436088*^9}, {3.695693945044643*^9, 
  3.695693951231247*^9}, {3.695696239813366*^9, 3.695696241577669*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"Acute\"\>",
       HoldForm], 
      TagBox["\<\"Normal\"\>",
       HoldForm], 
      TagBox["\<\"Obtuse\"\>",
       HoldForm]},
     {
      TagBox["0",
       HoldForm], "2.228`", "1.114`", "2.228`"},
     {
      TagBox["0.5`",
       HoldForm], "1.9909756402326977`", "0.9954878201163488`", 
      "1.9909756402326977`"},
     {
      TagBox["1",
       HoldForm], "0.9818268686484399`", "0.49091343432421997`", 
      "0.9818268686484399`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{0, 0.5, 1}, {
      "Acute", "Normal", "Obtuse"}}]]]], "Output",
 CellChangeTimes->{
  3.695693086511265*^9, {3.6956932214665403`*^9, 3.69569325900793*^9}, {
   3.695693308579301*^9, 3.69569331808421*^9}, {3.6956933607218657`*^9, 
   3.695693371288103*^9}, {3.695693409870452*^9, 3.695693432072586*^9}, 
   3.695693775411927*^9, {3.695693946210195*^9, 3.695693951611409*^9}, 
   3.695696242072041*^9, 3.695762167824394*^9, {3.695766246261339*^9, 
   3.6957662930174294`*^9}, 3.6962027254058237`*^9, 3.696628864495075*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Estimation of ToW Fraction from ToW zone", "Section",
 CellChangeTimes->{{3.6956940851737022`*^9, 3.6956941340894814`*^9}}],

Cell["\<\
We can make a simple estimate of the ToW fraction just by assuming there is a \
rate war between leaving the ToW zone and binding\
\>", "Text",
 CellChangeTimes->{{3.695694147047868*^9, 3.695694175301054*^9}, {
  3.6956942085064173`*^9, 3.6956942193187723`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"konMacro", "/", 
   RowBox[{"(", 
    RowBox[{"konMacro", "+", 
     RowBox[{"v", "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "ToWzone"}], ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.695694267265317*^9, 3.6956942995755587`*^9}, {
  3.6966325495859623`*^9, 3.6966325533761597`*^9}}],

Cell[BoxData[
 FractionBox["konMacro", 
  RowBox[{"konMacro", "+", 
   FractionBox[
    RowBox[{"v", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"L", "+", "R"}], ")"}], "2"]}], "-", 
       SuperscriptBox["s", "2"]}]]}]]}]]], "Output",
 CellChangeTimes->{
  3.695694308869583*^9, 3.695762180745199*^9, {3.695762271741094*^9, 
   3.695762292739167*^9}, {3.695766246295463*^9, 3.695766293044088*^9}, 
   3.6962027254464283`*^9, 3.696202837210359*^9, 3.69662886454941*^9, 
   3.696632554344985*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Sin"}]], "Input",
 CellChangeTimes->{{3.696631233351597*^9, 3.6966312398697042`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Sin\\\", \\\"[\\\", StyleBox[\\\"z\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) gives the sine of \\!\\(\\*StyleBox[\\\"z\\\", \\\
\"TI\\\"]\\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Sin"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.69663124075134*^9},
 CellTags->"Info803696602440-8466058"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdeg", "=", 
  RowBox[{"p", "/.", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "\[Rule]", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", " ", "Degree"}], "]"}], " "}]}]}]], "Input",
 CellChangeTimes->{{3.6966310697200212`*^9, 3.696631079972958*^9}, {
  3.6966311958664494`*^9, 3.696631228028921*^9}, {3.6966312658296013`*^9, 
  3.6966313124823713`*^9}, {3.6966327673966217`*^9, 3.69663276865576*^9}}],

Cell[BoxData[
 FractionBox["konMacro", 
  RowBox[{"konMacro", "+", 
   FractionBox[
    RowBox[{"v", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Degree]", " ", "\[Theta]"}], "]"}]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"L", "+", "R"}], ")"}], "2"]}], "-", 
       SuperscriptBox["s", "2"]}]]}]]}]]], "Output",
 CellChangeTimes->{
  3.696631080909305*^9, {3.6966311988324213`*^9, 3.696631205751877*^9}, 
   3.696631275820773*^9, 3.6966313129641113`*^9, 3.696632769126522*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"konMacroRule", "=", 
  RowBox[{"konMacro", "->", 
   RowBox[{"konMicro", "*", "n", "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"4", "/", "3"}], "*", "Pi", "*", 
       RowBox[{"L", "^", "3"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", "/", "3"}], "Pi", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"R", "+", "L"}], ")"}], "^", "3"}], "-", 
         RowBox[{"R", "^", "3"}]}], ")"}]}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.695694311805951*^9, 3.695694451910632*^9}, {
  3.696202793173047*^9, 3.696202806594555*^9}, {3.69620357082255*^9, 
  3.696203576507887*^9}}],

Cell[BoxData[
 RowBox[{"konMacro", "\[Rule]", 
  FractionBox[
   RowBox[{"konMicro", " ", 
    SuperscriptBox["L", "3"], " ", "n"}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["R", "3"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"L", "+", "R"}], ")"}], "3"]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.695694455009972*^9, 3.6957621807954187`*^9, 3.6957622767088346`*^9, {
   3.6957662463382463`*^9, 3.6957662930638123`*^9}, 3.696202725564598*^9, 
   3.6962028099936867`*^9, 3.696203577758194*^9, 3.696628864598854*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pofs", "[", "ss_", "]"}], ":=", 
  RowBox[{
   RowBox[{"p", "/.", "konMacroRule"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"konMicro", "\[Rule]", "25"}], ",", 
     RowBox[{"n", "\[Rule]", "15"}], ",", 
     RowBox[{"L", "\[Rule]", ".057"}], ",", 
     RowBox[{"R", "\[Rule]", ".5"}], ",", 
     RowBox[{"s", "\[Rule]", "ss"}], ",", 
     RowBox[{"v", "\[Rule]", "1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.695694466481621*^9, 3.695694555624082*^9}, {
  3.695762228527061*^9, 3.695762267109976*^9}, {3.696202827498632*^9, 
  3.696202830361175*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CI", "[", 
    RowBox[{"f_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"1.96", "*", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"f", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}], "/", "n"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.695762580181838*^9, 3.695762652731892*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"pofs", "[", "s", "]"}], "/.", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1.25", ",", "1", ",", ".75", ",", ".5", ",", ".25"}], 
      "}"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Evaluated", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6956945437694397`*^9, 3.695694567920828*^9}, {
  3.695694648808076*^9, 3.6956946545452223`*^9}, {3.6957622990718613`*^9, 
  3.695762374304659*^9}, {3.695762405148315*^9, 3.695762417406746*^9}, {
  3.695762465775004*^9, 3.6957624839766283`*^9}, {3.69576252911856*^9, 
  3.695762557279071*^9}, {3.695762694737546*^9, 3.695762697279948*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, {}, 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/wNnxicW
       "]]},
     Annotation[#, "Charting`Private`Tag$22724#1"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
///fQ/4P51bEQg==
       "]]},
     Annotation[#, "Charting`Private`Tag$22724#1"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt2Hk8VN0fB3CGmKlHspZ9KRItHkSFvpdEVELaFJWMLdkfWiyJUFS2tJE2
S0k99lJJO+WxJyqluWPJMmOZ5d6Zwe/0ev3+mtf7NTPndc/53nu+n3N1vEPc
6BQxMTF5cTGxP58SL+e34GvDNrruMhmem2OD3u96S83sHZBhNxmTJmCD4N81
Pr1ZB+Gp1PvxJVw2DCj6EzVZIRBVbn54/QgbvtonvS7Miocx/6HYjC42fD6Y
tTw/6xLkGr2WvHKfDW5BKl+vZhXAR/0cSfFdbMicOlCZm/UYnv7zcefychZY
vnOabxvRAOsVsodl6OMQetL5cGVoI9T+9Nt5w3EMjj2hX6QsbQOrYNuREqdR
6Bp2pBV7d0EwFjb7ZPsInF/DE6vZ1wN+NVeOKEf9hjCjxssNhd9hp0qWGH5r
GARHjj7qC+6H7C7f/ArGEHi/2O2S4csAPwW3NiWbITgy2dXQkMoEDRPfRe23
ByHduDakKHkQNmpktKqqDQKlodYi6eQwaK3hNTncHQA5w60tP6+OgF1t1nPN
1QOwpcD27kTWGLwwf+mg38yExexm+/haFmwXlfkXHGPC9Q914hIBE1BUI3Km
qDPBSsNmTttnEixaZ2/Re3Ew6l/EjI2cgpi3Ks9lb+DgPKT9Our4FMyP41E2
XMchlGV8KyRmCvIGWzp9ruFQJXI5cDhpChZylyo8v4KDlUpml13OFBBbN0iF
5eCwzU3u3YKqKXDW0SzjXMAh6K1c0bXpKbg5U37cOwGHshJ5/+rwaUiVG6B1
BeCQ9PmljUT0NOzV0baSQz5AOabmemoa3mjILNjhj8P8Ax9axhKnIdH1flyz
Lw6+sjFrl12ehg3/Fta1HMFBO2qAkl07DVP6DRETnjjkbHqSHyqahs3T+V4l
bjgcDaVH14txoD7g9xzhioNtvrzrX/M4cKb8qKUT8iQvSLJEhgOaX5pOs3ag
+T/QOfpTkwPflzNtN27HgSqXts7ZhgOOdsk5AgccYn54dholcyCrr2hiwBoH
joN1Pv08B6rzbqdvQw4qV/cruMiBmS7tZ5VWOOxP+iaQv8IBm8/HWhMtcdhg
uE9XUMyBiagLnYbrcSD/cQ9rbOJAmGKYVY4ZDlEyW2XpMly4KnvYoMsIB1aU
Ye9NOS7MqefxtyH79tPu9ihxYfWyM3veG+Kwu7LRfJsmF0onFjfVrcBh7T57
L9M1XMDOjYY9WI6u755NmbgrF6wKglruLcUhzGrd1ps5XDjt/mLPPHUcxIJz
4i9d5YJ/1QnhFTUcLhZMVJ7O48Ki6Fo1I+QHlPvqR+5xweRoRrubKg6MRhXW
8iouVEeUypUswcF9lzCjvJML4qr23wKUcDAPru9+K88D+qb97k6yOLwtUF1Q
o8yD2oO7o8YW4uDWHgXFqjxg/VOhcAk52GxNyTldHtwPDmr4LINDsaDghLMJ
D0oUKb/8/8JhSUqCeo8rD1aWPLQoouEgKLDzHs3gAXFHal6sJA4b+dZZf1/m
wVW+/vhy5ARni9fR13iw0MCY3imB6jezQlfyDg+yJ3slVyIrecgy1Ct5kOt4
VZwpjoOx4tfDzp95UPevx+/gOQZEHO3MzOnlwQ8KrVkXueZ186uvfTxoOqC6
8cssA6zDXur4DfLA/rV9mw2yU8u9X/F8HjA/j5dqzDCAnhpyuFyFD5dDGOsn
BAwo+emfydfgAyfARLYMeczc+5W1Lh+s7wRHBCKHD7jrfDTkg7t+xvAgyYDT
tht+MSz5UL72adIgwYDrIsnDil58+GstI06Mz4C20OuHou/wgT2bvaNgmgGG
GYuEkUV8iMY+WIQhJz5Ovhz+gA+bGn7f2IRszgr/eKyCDx3iY19+TzEg/+hW
M5/XfFhaHalphRzoK5J2ZfChWGItgz/BgLdnw+84D/KhccvZlHZkjcJhq20j
fOCKpZaUIrfhXWEOU3wo0b7ieRjZ4nDZN2sKAfyxuOwONgMkD3g9NtQlwFv4
2KiZxQCvU12OBvoEnGq4d74Mufa6E1PPkIBAuir9EnJgr7mKjgkBzWGx6e7I
7btlExfbEuAk6rnHHEfzizqroWRPwNbe8z+bkJMuC2vlnQiYnC25/Bh5XdfQ
mIwbAeyH2pExyDddG3ZLehOobi9INWQi1HxS3JeA/HeZsvOQ3TIeps0FEKC+
ueEWa4wB81qvNgjCCJgpXrb2DXLQtjDDyQQC1Ca79MKR3x8dess6S8DhOHvl
g8haaZ4Hx84RkJcscWYbckeTY85QJgFy+/d9MkBe76A723cb/f6jg97QKAPM
7n5M/VBIwPY7qyx7kFfPhSuU3yfgwauUD03IurVvDJLK0fffsjc9QlZXCKo8
Vk1AVtgm09vIyiGKG/c8JcA5xftaDvKC5fSdhq/Q+n0daYxBlkqU+aHwjgBt
KbesMGSxn9X+M40EzF1Y1uGLzMmVimtrI0BVjFrthsyaekSt6yJAzGjxXkfk
Yec92Xd7CDhiejEMQ+6TKimJ6idAv/VfaWPkHm8X00NMAmK5HkkGyB31xAvH
YQJstAKjdZCbVW9vMR0joOhxX78q8vsox071CQIMFasbFJEbOiY9pTgEZL9l
K8si162+PszmEzBuewGnIVedt43oFaL5ql3Qn4f8eHBk5vUcAToDrJ9iyA9s
s1MfSpCQiFXIzoww4N5NS4VcaRLGerqrSeSbAjw/fgEJXUcOdPCQr+5ONwiQ
JWH2li2dg5xVYVbppkBCtMe54Cnk9IV91laLScjxMWZNICcHnm3UUyNhIt+C
yUZOeL9qp6wWCWHsmy5/HKPb3UfokmC3zdf0j6Pi4vwZ+iT0l19I/+PQr/rT
nwxJkDBQOvBnvEDz1tjq1STUNIhuTyL7ZEVTC0xI2HzVzmsa2YullZ1qTsLW
z2MZXOS9To0a4RtIuF/CXU8g7ywKLdm/kYSz2w/uEyI7U1RMN9uS4E4zZM8i
b/F69WK1PQmtRruFFLQ+tnUBW5Y4kUAsZMZKI1spy3eKO5Ogsbgr6i9k8/A6
z1FXEtor9AflkI1bvIe7dpEw5fH902JkveTKmWJPEryGwgXLkLUZ+1MzD5PQ
MeG+aSWy6kZJhVN0EiiueRQz5IU8dwPnYyQsbPdk2iFT3WYqLMJI8PTvlXJG
pjwqtNb5hwTnzS8K9iDz6Tw3TgwJ+savzIKQp17d7Os7TUKzNG4cjTym4eD/
IQnV40no3TPI/Z+vxF5PJ8HmQefodeSmzetLsDwSjNZ009qRj3+IWx1/i4RN
maMz/cgGjm+rXtwjoTQvMHYSOXnbjlcbykgwiX2oqYieR7ud9K9m9SToLQsf
+fP8croeHIp4TYLkSukNkch3d08Mlr8nIW9UUekcMsXj1PTqVhJsDe4eq0Ju
OJT514p+EtgdTSVyaP8IZXRn+THR+KFH3A2RtXzUVYqGSRD4pKZtQo7zK9Zb
OonqVRWXF41sFfxiowZFAHKF/o6DyLWnfofKLROA0YX69j603/nOrObvMBDA
qSPeFnPIyvGRsRdXCuBB6isDHbSfRp6ZO7dgrQCsK14+8kU2Oad0d569ACrs
tbcQyI9ybT6TfgJQvPWhcu0kur+WpOxfFyQAQWx/90FkmevNv6JCBSDJmTp7
Hjkofw9r+rgAJP5WTv2FbHjvmDTrnADcWzvVc1E/KCy/tp5RKgDLdsd0FQ66
n4X7DXseC2DdMz8pR2TjzZpqLZUC0OGWCY4jP++5I3r6TAA58W9dvyJ3zpW+
zPwkgBtHcurucBkg7ly/2WZUAP6CmpNOqH+9v3La3IItgBLViGsJyOm/bJev
mhZAmvptk6fIS/75QFURCiD6vm/XCtT/1uS1fZqYL4SedL3uRag/eo4wXG8Z
CuFDjcQXLuqfumaFtrmrhZAe4VhgJkT7WayfabqJEFpv7mJEIEfKjSke3yCE
GwNfeqaR09Zxv+xwEoKZtl4qKWLA02Rpr7kAIXSMynDVUL9XWroy0Ou+ENq9
n5m+QHkhIytt9/0yIbw/mDUth/LFfMqoLadcCHJJl+z8kMV+3Vc7XycE6zXa
1xXm4TB2c/l/1Z+EsHHommKEFMo/qkuNZVhCELNasmM7yi+R8qq8ZyYi+PS7
VjME5SN2wgmGlIUIVtF/KHUjB072tLhaiqBqzK/AehEOh9quFA9tEgGzpTVg
oRzK1xeV9insEkGxvEFfjTwOS+fLPQ+MFsH3G18clirjqM9Tz6g8F0Eh3T0+
UAPlx7JrXi4NIrDKenLrFzLNw8gy5a0IgmNuu+zTxAGrcOZwmkVA32lywEkL
h0fel33b+kSwpblkqakODmlvdLemzImgIvtnnJYeDnZnrRW5tjPQT5i/OrIK
h2pqRFFb0wxcTeiOyQccBmMSxuv/m4EBQbnpagzlt8lLZmXtM9C5KDfgJXJM
78PX53pnYPRXqRtug8Z7MPjD9vcMLNp5Su1vO3T9Wz0WV1Nn4Wvp+mzmFhwm
LtqkXnOYBWGQ1kn0D1iptCjQ+90sZHG/bHruh4PC42cPC5tm4XJaq3YMOi8I
tvixh/+bhbGpgCtW6DzRGFMfGdI9Cwcu9bi+DMTBhxkUHzM0CxtWfJ35dAyH
/MqmnFzaHJQLLtlRInFY6Jb48uP2ORA77aKDn0b1uchTNO2eg/e55tyTeWi9
U1LWhASKYVTP2Y5/u1Ee9vj21XZIDGNuLuDGL2HCloFOsjpYHAvalXpgWSAT
jofT/ZXHxTFflQWFPg1McK654aQcRcGiCK3KuBUDwBIFxkjwKNjiNodHK68M
wO0vCVXBERKYe0xuqunCQRD4Wx86IZTAVL/J0mn5g6Axk7k/7KQkdsd/mb+u
8RAMOqR9pErOw+o8GdlVP4fgjX4zaKbNw2qx5EdP8ochkFokqUOTwtR6U6Uk
D/2G2lvLrN9kSmEPV33/1WU/Ai2WVu/c5KSxQZX5Tl0mo0AE3th56KI09pC7
plh2zRg0uhTsklGmYqE//N7oeIyD93qr4uIcKqZ0t9bHII0FAeP/cb/nUjGZ
/vePazJYEHr7oJ38NSpm/ZOu5pDLgnha4q+YfCp2zyVhT/BtFuT1Nqm5FVEx
G7czJ7rRObX7xJ4MUS0Vc/NzWbJwgAVOdeEnXL9RMT3rncHaNmxwDZZsTO6j
YqezEvZz7NmwVzdX+flPKnbmoX3ix21s8Dv/tFKfScWel46cjd3LhiQPMZZw
jIrR08RDZkPYUC+44F00S8V2fSxNDypgw7tHWuXfxGjYqkpWik8hG5q9y+cW
SdAwb33bT16lbPj2sSvvlDQNix1PXOVRywbiutoXl0XIS+jHg1rZMOdcppcs
T8NO26k3R31mg5QERD5TpGF7U+qDE7+xQfGot5y+Cg1bEW1x7+4QG9S0OAf3
q9GwlzGN62rH2aDbefZRhgYNozs91fpvmg2GKYtn3mnRMJOOoX0DJBv+try/
VahDw1z+/z7kf4+s5Y4=
       "]]},
     Annotation[#, "Charting`Private`Tag$22724#1"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt2Hk4VN8bAHAhBkmYZGuhskwlCSXLO0bZ8pWlUrTIlmyhvkS0qizli1AU
kr2i7KUSopAkS6FU3LGmGcuYuXdm8Ds9z++veT7Pvc85Z+57zvu+96q4nXbw
FBQQEJBZIiDw91fojXg7phdkslp288TiIhM2jtcarrm9D5y0ufaLXCZwn231
6Es6DonF+tYCbCYMk73xqqTTQK6nTYhMMqHfPKohL+kiFMXnfFfrZULP8ST1
jKT/4IhFMaX0GRMc/BT67yZlQerqw0GTbkxInDlSnpr0FC7RWUojHxhg2GQt
TjtTB42jSSpw9w8EhtueKA9shuf1EgOCCZPg/9wzXnB9B6TO8ExJ2b+he8xK
rMCtGyx0QyfLyiYgditboOpwLwSIZh+LHhmHoE3NKXV532HCQmrxndI4cN19
SwYCfsGCrl2FmtcYuL0+aJfgNQR5uz1iqR9GwX26u64umg5q2Ne9q3RG4aZ2
9en86yPgc0FaSe3ZCAjWVe+ICh+D72FPW2lGIyBN2dv+8+4EtBIU98etw2CZ
RcuZSpqEJd6/Dp3zHYZVzDbzi9UM6GVWFAdIDUP6+5olQqemoCT1uXnnGzoY
rTZdXOcxDe6SAma1F+iw6dcKeuTZGbihnv++wZQOtqPrGkLOzYCFVFf8NJUO
gQztB6cjZiBhZsP3dcgVfLsjJ6JmgPZ8mnTZBI2nkNi9O3kGgtQtiywM6WDj
IN0kUTEDTuu/zP3RpYNfo3R+2uwM+B/bY5mpQYfiQhnvyuBZwN6XmcdK0yGq
542pUOgseIdPuH5YQYcjgv5K9udnodNsXFYSWfzI+/bJq7OQWDFtlrScDl5S
EXobUmZh8L5Ga44EHdaFDAverp6FqtN6x7GldEg2e54RyJ+F44kbt3ZzMfAN
9AytFWCBwLwTaCDTMmTsly1lAflfpZEIAoNptp9woSQLOhtkOOo4BraPVHx/
rmFBbtHMhmtzGJCk43bamrKAn67+0GUKg4gfR7s2XWfBvDen7NwIBiwL4wzP
WBZALtdkaBgDv1Llk1nxLCAN73S2QXaJ+saVucMCNXstE1U6Brsoh1W5BSwo
bQ6p6R7EgPh3f1BzCwu21IWf2z+AQYjkXilPyTkIKl14UtuNASOE0pcpPQe3
FHREdiF7/RLL6V05B78diMnKLgwOljfr26yZg3s/pN2fdmKgd9j82Patc5Dw
iTxV2IHWl2tavMR+Dnz7+q5UtWEQZLRzb2byHNReGzAwbMJAICD54n935+CC
x76hT40YxGdNlV+6j+b7WC3sifxIsEjZPXcOPiZZVSe8xWCoWYGhXjEHRqcu
df6px2D/AV5CadccOCj39tXWYqAfUPulUYYNfg9VZ18+x6AxS1GiSo4NCVec
Wo8jO3wOgQJFdD3tkqIwcoDu1sIYVTYov0zcaFuNQQE3K8xWhw3r1IeGRysx
kL9xWbnXng21PQySTjkG3Kzdbr8T2PD428HCdSUYmHCMk7alsOHcEf6qj8UY
XLbd0RCaxoam1nZyODJpXlNV+CEbTo30V/Y8wWCls9SQcjkbom2qkm8/xkCb
3H/CtocNg9VfazWLMDjj25WY3MeG0YnK+R+FGFQ1tNX3D7DhhpBVSzKycdAb
lZMjbNB7GSQiiGzdnjt4kcMGxjIJeSwfA8/o0ydKFTignhia9CYXg8Kf3omc
1RzYigenRSJP6rvVG6tywLz0+WYj5ODh/SqtFA4IW4vjNTkYXKLtGhwy5ED/
ASWVNw8xSOcLnyAf48CqqtbqwQcYdASmu4Y+5IDe/taO/zIwoCSs4J3N5wD3
CT/aDfnq0+spwY84MENgNXrI+ozgVv8yDuTmN8QN3Mcgw3evrkcDBxJ4zoM6
yD5efFH7IQ483sI4xEpH8boW/NB2hAOdwi2P2pFX540Z2Uxw4M4u1ZAi5A6s
O8hihgNakWZhrsg7ThR/MxbEweTZH+3uNAyEjxx7SlHF4YyLh3vnXQyOne+2
0lDDofJHy94K5Op0a/pGCg7thpeLU5F9+vQVVHRwWKj/9v0I8ueDUldX0XBg
Dc9PMO6g/xdybfVKcxx0+55mdCNHpfCqZazRfBrZLTXIO7tHJyUdcNh32OBW
NHKmfd1BYTccfKtE3moi44H600u8cHg7FQayyA4JT+IWT+HwK1ZZbz4Vg6Wf
7tZxg3AYyhyL60T2swmiTF/GIbzGd/QK8jvf0UbGNRwsVTS3BCKvjTt6fDIG
Bwd/0uRR5M4Wq+TRRBwoVWo9u5ANLFQXBrLRes1q9nNTMNDNaY1+n4fDRz3H
4t/IWovBsqVFODxP+id8AFm1+q1GVCkOPdJuQQ3IyrJ+5f6VOPyzPPxeJbLc
abKJ0wsccjWZBkXIEuqejpR6HDZ9nexKRBa5KvlDtgmHu7fOfLqOLPCz0nu+
GQenx44QgcxKFbnQ0YED3qoc4Y3MmCkh1XTjIGwobHUceczW6XZOLw4vGaax
B5EHRAoLQ37hoOX++pQ5cq+b3XZXOg6C3wlRQO6sxV9bjaF4kmIVdyK3KWZb
bp/Ewe+If/Y25HchVl3KUzjcdMy5vwm5rnP6qAgLh4ozm5apIddopY8xOSge
e5dOrUOuiKWd6ePh0H1G21IZ+enIxHzDIg7Gt56Q5ZEf0W5HPxEiIIUWdoCM
nJtpKJsqSkCxRaq4NHImF8u4KEFA8mEh3eXIdw/e1DglRcBtk7rPEshJZbrl
DrIE6L9rw8SQby4fMDZaRYBpi4YPCfm6z7XmjUoEVGp2e4giX363xVFqLQGf
O9u7RJAjVL8M4KoEyLyQr/7rkAsXvIfUCNDqL13+9/7AfrXZDxQClI3T+//a
R/9TZKUWAZIznxX/zueRFErK0iEgUObwJ3HkY4y1t6P1CWDUbcWXIR+ybl4d
vIuAYM2DKVLIjvmBhS4mBKy93JYvg2wrqLB9D42AQyK3N8shWx6rf61lTsAr
gUdqisi0mlOW8tYEbKyXTlmDbCQn07XEloAn2a2h65H1g2uO/rYnoGBpT7sG
sna721j3AQKKDm9L10LeeL18vuAoAbvKBm8ZIq8bcolOPEGAaq1+FQ1Z0URY
9rwnAbXNPx2skZez92vY+hPgbqs97oxMcpgv2xGE4qHYN+SOLFiSZ6zyLwE6
0b12/sgcT7YDK4KAZft+xFxGnqnPHBi4hOJlNrL/JvLkagvv91EEVEhZJt9B
/tVzJzL9JgHvW5UDnyK37DEopN4nQE1O7T4d+dz7C1oXHxAQ64tZspA1rBor
XucSYH8z7YIwOn/XbfbV7yom4JoNO0oNebejZ79uLQGJR7Lm/55fVvcj1zMN
BBy2tJuJQs45ODVS+o6A3GuigWnIgs7nZ7U+EbDncYJII3Kda+IyzV8E2ASY
P1iL8kfg0Jekk3QCeE5uAzuQ13ooK+SPERD3T0qOHfKFkwUb108ToFls9eEq
slHAa5PVglxIoGlHTyFXnx8PlN7AhZvCUIOhfOc1r8XZp8GFZ1XzMcIof8pd
PBsZv5kLw9ELQxuRz15ZjJHQ44I8uUvbB1knZmXOUnMuZJmpGhHIJammPcRJ
LnhvciJvu4f2l/wNl51+XDDb3RrmjCyZ3jYYEojG9632jkL2y3BizJ7jQkyu
FNaHTMn1F2XEcKH/rYZ1HKoHeaVpBkOPuaBh8GxYNBPtZ54LpfcpFwz6PWP0
kbX3rFFqL+eCtdSKPE/kV70P+S9ecoFyz353E3LX4uM3iR+44KLOUY3NwmCJ
be0e099cCC118aBko/xw55L+DiYXWj4Zxbgi3xykqW+Z5UJt3H61O8jy/74n
KfC4wKgyaFmK6t/W+x0fpsR5YMg9XDaGfHRiyP4BhQc/r0nINaH6qaqbR0vV
4sGVsCt1gnkon0We3H5Thwdqv89jVOSz0pPkc7t48D1N/HYtctzOua/7rHmw
M1o97Q2q1y+uix5bPMUDjZ1C5r2onq9cv9nnWBEPqHleVh6of0hIijtYVMyD
m7sjr1Yjiwv+prFKeeBjge+VQP2HwGCRUmwNDz6XGEZXIE9mqn+s/MAD4ejv
JZLPUD1VXK8tyeBB45uvL/vL0HpkFNkvdfjwuows8wv1P8zLYUMiO/igpOmk
uecFet7Tve32hnwIl1HseITs2nGnYNSMD2Julm2hNRjYxK88LHuADy08l0vy
rzBYLy79yieUD5EUvV9n36D8vIR0ReEVHziHoDntHcr3xWnH7Or4UN91v3L5
ewzEnDcZ3mjkg4FQolYUMrXMlsVq44Pp5lNvA5vRfnJL8eoY4EOdoWS4XSt6
Xm9V995Y5AOmw9pAaUfn6ZoxeY42D4sngxvMv2CoDpzJ72iZB3J15Gf1MQxG
Ii7/qf04D/fMFesrkeWn/9Mt/jwPlEO/Nu8eR/m070lDTN88TO5ZFeY2gcZ7
NPKDNj4PDf4hw7mTaP17nVdVkhbg1rCNvOk0BlPxptFpFgvArpUx/Ir6980r
V/i4NS3A0etSxpFSdJB9+vJJXssC0OQiaAbofYFreZI59nEBhmIqB+aQmyNq
z57+sgCP47/2BMrQwYPudzFidAFyAr60+6+kQ0Z5S3Kq2CIYn8RmryrRYbnD
1Tet/yxCZL5PvAp6X2HGs8nbvyzC/n2mh9TM6LD+xo2tp30EqOPPbX7LR9Bh
yPlbP21UgOrIp2zzfEUHy+EuojJgCfXHq+e64suG4Vywp7fcnyXU9imhCyTX
YbCtumctFyJINQmWYW95NwwMvk+EEFuQGp9Odo3RHoHsr5crAs4IUW8F5A6X
5IwA19vYNYwnRPUd/RIXsWUUVs8nugSFC1MT/kkuJWpGYcQirpUkvJTaeudB
qZX7GLxVa4M1cUupY2tdChrkx8GHlC+sIiZCVYkT9Uv5PA7VDzYYv00UoYbn
PDDQfjKB+jCjJgdpUer5xWWu2bG/Afe55+gaL0pdIxlauTV0Eprtsg5IypGo
Io/v1K+K/wNuBkYFBckk6pVgA832Qgac+vNx7nsqiRpppgpTxQwIzD6+WyaN
RDV1IauRyxlwUezqYEQGiaq86HLqxGsG3O9rUXLIR9cfhPRIdzLgS5hTAr+a
RDXcAo2tPAZY1wSH2X8jUfXOtYtk2zHBPkC4+foAidpmYOWycIAJh1RT5V79
JFHNltndPurChJOxL8rV6CRq9l2XZypeTIhyFmDwJklU36/DJXXnmVDLveWW
v0Ci/hYk05wLmNBUsrb0m4AYtfCQotyXJ0xocytdXCEkRo1Zu/6rYxkTvrV2
3z8vKkY12JGpeuA1E/B0pa92K8SoTRbTzIAuJizaFm+8LiNGtWPXGXF7mSAi
BGdfksWo0d+cz9/4wQSyr5u0moIYVSLNsaNgnAlKa1nHXZTEqMHjw6O7mExQ
7bpWkrAa3e9aNPuJxQTKjVXzTWvFqKfFd7K8uEzYZli0l6ciRlX+//eQ/wGQ
H82p
       "]]},
     Annotation[#, "Charting`Private`Tag$22724#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 3.1415925894756573`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.695694568609459*^9, 3.695694655813505*^9, 3.6957621808741693`*^9, {
   3.695762303153899*^9, 3.695762310985209*^9}, {3.695762364498263*^9, 
   3.6957623750068493`*^9}, {3.695766246446776*^9, 3.6957662931595583`*^9}, 
   3.6962027256654263`*^9, 3.696628864716489*^9, 3.6966325636665*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data1000", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Riffle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"30", "*", 
           RowBox[{"Pi", "/", "180"}]}], ",", ".58"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"90", "*", 
           RowBox[{"Pi", "/", "180"}]}], ",", ".46"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"150", "*", 
           RowBox[{"Pi", "/", "180"}]}], ",", ".64"}], "}"}]}], "}"}], ",", 
      RowBox[{"ErrorBar", "/@", 
       RowBox[{"CI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".58", ",", ".46", ",", ".64"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"36", ",", "95", ",", "44"}], "}"}]}], "]"}]}]}], "]"}], 
    ",", "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"data500", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Riffle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"30", "*", 
           RowBox[{"Pi", "/", "180"}]}], ",", ".83"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"90", "*", 
           RowBox[{"Pi", "/", "180"}]}], ",", ".7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"150", "*", 
           RowBox[{"Pi", "/", "180"}]}], ",", ".8"}], "}"}]}], "}"}], ",", 
      RowBox[{"ErrorBar", "/@", 
       RowBox[{"CI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".83", ",", ".7", ",", ".8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"46", ",", "60", ",", "40"}], "}"}]}], "]"}]}]}], "]"}], 
    ",", "2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.696202672593453*^9, 3.696202703670167*^9}, {
  3.696630145164111*^9, 3.696630149145533*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "6"], ",", "0.58`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.16122911234224005`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "2"], ",", "0.46`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.10022361524427055`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "6"], ",", "0.64`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.14183093648938`", "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696202725683318*^9, 3.696628864764688*^9, 
  3.696630149655839*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "6"], ",", "0.83`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.10855270809511207`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "2"], ",", "0.7`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.11595516374875248`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "6"], ",", "0.8`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.12396128427860045`", "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696202725683318*^9, 3.696628864764688*^9, 
  3.6966301496659193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data1000deg", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Riffle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"30", ",", ".58"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"90", ",", ".46"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"150", ",", ".64"}], "}"}]}], "}"}], ",", 
      RowBox[{"ErrorBar", "/@", 
       RowBox[{"CI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".58", ",", ".46", ",", ".64"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"36", ",", "95", ",", "44"}], "}"}]}], "]"}]}]}], "]"}], 
    ",", "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"data500deg", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Riffle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"30", ",", ".83"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"90", ",", ".7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"150", ",", ".8"}], "}"}]}], "}"}], ",", 
      RowBox[{"ErrorBar", "/@", 
       RowBox[{"CI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".83", ",", ".7", ",", ".8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"46", ",", "60", ",", "40"}], "}"}]}], "]"}]}]}], "]"}], 
    ",", "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"data0deg", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Riffle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"30", ",", ".79"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"90", ",", ".93"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"150", ",", ".89"}], "}"}]}], "}"}], ",", 
      RowBox[{"ErrorBar", "/@", 
       RowBox[{"CI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".79", ",", ".93", ",", ".89"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"38", ",", "59", ",", "27"}], "}"}]}], "]"}]}]}], "]"}], 
    ",", "2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.696631115541273*^9, 3.696631136746867*^9}, {
  3.696631976197445*^9, 3.696632032536728*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "0.58`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.16122911234224005`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"90", ",", "0.46`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.10022361524427055`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"150", ",", "0.64`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.14183093648938`", "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696631138062914*^9, 3.696632033208425*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "0.83`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.10855270809511207`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"90", ",", "0.7`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.11595516374875248`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"150", ",", "0.8`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.12396128427860045`", "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696631138062914*^9, 3.696632033218292*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "0.79`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.12950527727511826`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"90", ",", "0.93`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.06510593193312998`", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"150", ",", "0.89`"}], "}"}], ",", 
     RowBox[{"ErrorBar", "[", "0.11802269712659949`", "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.696631138062914*^9, 3.696632033225881*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pofs", "[", "s", "]"}], "/.", 
        RowBox[{"{", "konMacroRule", "}"}]}], "/.", 
       RowBox[{"s", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", ".5"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1000 Simple Theory\>\"", ",", "\"\<500 Simple Theory\>\""}], 
       "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data1000", ",", "data500"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1000 Experimental +/- 95% CI\>\"", ",", 
        "\"\<500 Experimental +/- 95% CI\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MT Angle (Radians)\>\"", ",", "\"\<ToW Fraction\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.696203476083432*^9, 3.69620351408803*^9}, {
  3.696632691031443*^9, 3.696632693663673*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/wNnxicW
           "]]}, Annotation[#, "Charting`Private`Tag$22914#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt2Hk8VN0fB3CGmKlHspZ9KRItHkSFvpdEVELaFJWMLdkfWiyJUFS2tJE2
S0k99lJJO+WxJyqluWPJMmOZ5d6Zwe/0ev3+mtf7NTPndc/53nu+n3N1vEPc
6BQxMTF5cTGxP58SL+e34GvDNrruMhmem2OD3u96S83sHZBhNxmTJmCD4N81
Pr1ZB+Gp1PvxJVw2DCj6EzVZIRBVbn54/QgbvtonvS7Miocx/6HYjC42fD6Y
tTw/6xLkGr2WvHKfDW5BKl+vZhXAR/0cSfFdbMicOlCZm/UYnv7zcefychZY
vnOabxvRAOsVsodl6OMQetL5cGVoI9T+9Nt5w3EMjj2hX6QsbQOrYNuREqdR
6Bp2pBV7d0EwFjb7ZPsInF/DE6vZ1wN+NVeOKEf9hjCjxssNhd9hp0qWGH5r
GARHjj7qC+6H7C7f/ArGEHi/2O2S4csAPwW3NiWbITgy2dXQkMoEDRPfRe23
ByHduDakKHkQNmpktKqqDQKlodYi6eQwaK3hNTncHQA5w60tP6+OgF1t1nPN
1QOwpcD27kTWGLwwf+mg38yExexm+/haFmwXlfkXHGPC9Q914hIBE1BUI3Km
qDPBSsNmTttnEixaZ2/Re3Ew6l/EjI2cgpi3Ks9lb+DgPKT9Our4FMyP41E2
XMchlGV8KyRmCvIGWzp9ruFQJXI5cDhpChZylyo8v4KDlUpml13OFBBbN0iF
5eCwzU3u3YKqKXDW0SzjXMAh6K1c0bXpKbg5U37cOwGHshJ5/+rwaUiVG6B1
BeCQ9PmljUT0NOzV0baSQz5AOabmemoa3mjILNjhj8P8Ax9axhKnIdH1flyz
Lw6+sjFrl12ehg3/Fta1HMFBO2qAkl07DVP6DRETnjjkbHqSHyqahs3T+V4l
bjgcDaVH14txoD7g9xzhioNtvrzrX/M4cKb8qKUT8iQvSLJEhgOaX5pOs3ag
+T/QOfpTkwPflzNtN27HgSqXts7ZhgOOdsk5AgccYn54dholcyCrr2hiwBoH
joN1Pv08B6rzbqdvQw4qV/cruMiBmS7tZ5VWOOxP+iaQv8IBm8/HWhMtcdhg
uE9XUMyBiagLnYbrcSD/cQ9rbOJAmGKYVY4ZDlEyW2XpMly4KnvYoMsIB1aU
Ye9NOS7MqefxtyH79tPu9ihxYfWyM3veG+Kwu7LRfJsmF0onFjfVrcBh7T57
L9M1XMDOjYY9WI6u755NmbgrF6wKglruLcUhzGrd1ps5XDjt/mLPPHUcxIJz
4i9d5YJ/1QnhFTUcLhZMVJ7O48Ki6Fo1I+QHlPvqR+5xweRoRrubKg6MRhXW
8iouVEeUypUswcF9lzCjvJML4qr23wKUcDAPru9+K88D+qb97k6yOLwtUF1Q
o8yD2oO7o8YW4uDWHgXFqjxg/VOhcAk52GxNyTldHtwPDmr4LINDsaDghLMJ
D0oUKb/8/8JhSUqCeo8rD1aWPLQoouEgKLDzHs3gAXFHal6sJA4b+dZZf1/m
wVW+/vhy5ARni9fR13iw0MCY3imB6jezQlfyDg+yJ3slVyIrecgy1Ct5kOt4
VZwpjoOx4tfDzp95UPevx+/gOQZEHO3MzOnlwQ8KrVkXueZ186uvfTxoOqC6
8cssA6zDXur4DfLA/rV9mw2yU8u9X/F8HjA/j5dqzDCAnhpyuFyFD5dDGOsn
BAwo+emfydfgAyfARLYMeczc+5W1Lh+s7wRHBCKHD7jrfDTkg7t+xvAgyYDT
tht+MSz5UL72adIgwYDrIsnDil58+GstI06Mz4C20OuHou/wgT2bvaNgmgGG
GYuEkUV8iMY+WIQhJz5Ovhz+gA+bGn7f2IRszgr/eKyCDx3iY19+TzEg/+hW
M5/XfFhaHalphRzoK5J2ZfChWGItgz/BgLdnw+84D/KhccvZlHZkjcJhq20j
fOCKpZaUIrfhXWEOU3wo0b7ieRjZ4nDZN2sKAfyxuOwONgMkD3g9NtQlwFv4
2KiZxQCvU12OBvoEnGq4d74Mufa6E1PPkIBAuir9EnJgr7mKjgkBzWGx6e7I
7btlExfbEuAk6rnHHEfzizqroWRPwNbe8z+bkJMuC2vlnQiYnC25/Bh5XdfQ
mIwbAeyH2pExyDddG3ZLehOobi9INWQi1HxS3JeA/HeZsvOQ3TIeps0FEKC+
ueEWa4wB81qvNgjCCJgpXrb2DXLQtjDDyQQC1Ca79MKR3x8dess6S8DhOHvl
g8haaZ4Hx84RkJcscWYbckeTY85QJgFy+/d9MkBe76A723cb/f6jg97QKAPM
7n5M/VBIwPY7qyx7kFfPhSuU3yfgwauUD03IurVvDJLK0fffsjc9QlZXCKo8
Vk1AVtgm09vIyiGKG/c8JcA5xftaDvKC5fSdhq/Q+n0daYxBlkqU+aHwjgBt
KbesMGSxn9X+M40EzF1Y1uGLzMmVimtrI0BVjFrthsyaekSt6yJAzGjxXkfk
Yec92Xd7CDhiejEMQ+6TKimJ6idAv/VfaWPkHm8X00NMAmK5HkkGyB31xAvH
YQJstAKjdZCbVW9vMR0joOhxX78q8vsox071CQIMFasbFJEbOiY9pTgEZL9l
K8si162+PszmEzBuewGnIVedt43oFaL5ql3Qn4f8eHBk5vUcAToDrJ9iyA9s
s1MfSpCQiFXIzoww4N5NS4VcaRLGerqrSeSbAjw/fgEJXUcOdPCQr+5ONwiQ
JWH2li2dg5xVYVbppkBCtMe54Cnk9IV91laLScjxMWZNICcHnm3UUyNhIt+C
yUZOeL9qp6wWCWHsmy5/HKPb3UfokmC3zdf0j6Pi4vwZ+iT0l19I/+PQr/rT
nwxJkDBQOvBnvEDz1tjq1STUNIhuTyL7ZEVTC0xI2HzVzmsa2YullZ1qTsLW
z2MZXOS9To0a4RtIuF/CXU8g7ywKLdm/kYSz2w/uEyI7U1RMN9uS4E4zZM8i
b/F69WK1PQmtRruFFLQ+tnUBW5Y4kUAsZMZKI1spy3eKO5Ogsbgr6i9k8/A6
z1FXEtor9AflkI1bvIe7dpEw5fH902JkveTKmWJPEryGwgXLkLUZ+1MzD5PQ
MeG+aSWy6kZJhVN0EiiueRQz5IU8dwPnYyQsbPdk2iFT3WYqLMJI8PTvlXJG
pjwqtNb5hwTnzS8K9iDz6Tw3TgwJ+savzIKQp17d7Os7TUKzNG4cjTym4eD/
IQnV40no3TPI/Z+vxF5PJ8HmQefodeSmzetLsDwSjNZ009qRj3+IWx1/i4RN
maMz/cgGjm+rXtwjoTQvMHYSOXnbjlcbykgwiX2oqYieR7ud9K9m9SToLQsf
+fP8croeHIp4TYLkSukNkch3d08Mlr8nIW9UUekcMsXj1PTqVhJsDe4eq0Ju
OJT514p+EtgdTSVyaP8IZXRn+THR+KFH3A2RtXzUVYqGSRD4pKZtQo7zK9Zb
OonqVRWXF41sFfxiowZFAHKF/o6DyLWnfofKLROA0YX69j603/nOrObvMBDA
qSPeFnPIyvGRsRdXCuBB6isDHbSfRp6ZO7dgrQCsK14+8kU2Oad0d569ACrs
tbcQyI9ybT6TfgJQvPWhcu0kur+WpOxfFyQAQWx/90FkmevNv6JCBSDJmTp7
Hjkofw9r+rgAJP5WTv2FbHjvmDTrnADcWzvVc1E/KCy/tp5RKgDLdsd0FQ66
n4X7DXseC2DdMz8pR2TjzZpqLZUC0OGWCY4jP++5I3r6TAA58W9dvyJ3zpW+
zPwkgBtHcurucBkg7ly/2WZUAP6CmpNOqH+9v3La3IItgBLViGsJyOm/bJev
mhZAmvptk6fIS/75QFURCiD6vm/XCtT/1uS1fZqYL4SedL3uRag/eo4wXG8Z
CuFDjcQXLuqfumaFtrmrhZAe4VhgJkT7WayfabqJEFpv7mJEIEfKjSke3yCE
GwNfeqaR09Zxv+xwEoKZtl4qKWLA02Rpr7kAIXSMynDVUL9XWroy0Ou+ENq9
n5m+QHkhIytt9/0yIbw/mDUth/LFfMqoLadcCHJJl+z8kMV+3Vc7XycE6zXa
1xXm4TB2c/l/1Z+EsHHommKEFMo/qkuNZVhCELNasmM7yi+R8qq8ZyYi+PS7
VjME5SN2wgmGlIUIVtF/KHUjB072tLhaiqBqzK/AehEOh9quFA9tEgGzpTVg
oRzK1xeV9insEkGxvEFfjTwOS+fLPQ+MFsH3G18clirjqM9Tz6g8F0Eh3T0+
UAPlx7JrXi4NIrDKenLrFzLNw8gy5a0IgmNuu+zTxAGrcOZwmkVA32lywEkL
h0fel33b+kSwpblkqakODmlvdLemzImgIvtnnJYeDnZnrRW5tjPQT5i/OrIK
h2pqRFFb0wxcTeiOyQccBmMSxuv/m4EBQbnpagzlt8lLZmXtM9C5KDfgJXJM
78PX53pnYPRXqRtug8Z7MPjD9vcMLNp5Su1vO3T9Wz0WV1Nn4Wvp+mzmFhwm
LtqkXnOYBWGQ1kn0D1iptCjQ+90sZHG/bHruh4PC42cPC5tm4XJaq3YMOi8I
tvixh/+bhbGpgCtW6DzRGFMfGdI9Cwcu9bi+DMTBhxkUHzM0CxtWfJ35dAyH
/MqmnFzaHJQLLtlRInFY6Jb48uP2ORA77aKDn0b1uchTNO2eg/e55tyTeWi9
U1LWhASKYVTP2Y5/u1Ee9vj21XZIDGNuLuDGL2HCloFOsjpYHAvalXpgWSAT
jofT/ZXHxTFflQWFPg1McK654aQcRcGiCK3KuBUDwBIFxkjwKNjiNodHK68M
wO0vCVXBERKYe0xuqunCQRD4Wx86IZTAVL/J0mn5g6Axk7k/7KQkdsd/mb+u
8RAMOqR9pErOw+o8GdlVP4fgjX4zaKbNw2qx5EdP8ochkFokqUOTwtR6U6Uk
D/2G2lvLrN9kSmEPV33/1WU/Ai2WVu/c5KSxQZX5Tl0mo0AE3th56KI09pC7
plh2zRg0uhTsklGmYqE//N7oeIyD93qr4uIcKqZ0t9bHII0FAeP/cb/nUjGZ
/vePazJYEHr7oJ38NSpm/ZOu5pDLgnha4q+YfCp2zyVhT/BtFuT1Nqm5FVEx
G7czJ7rRObX7xJ4MUS0Vc/NzWbJwgAVOdeEnXL9RMT3rncHaNmxwDZZsTO6j
YqezEvZz7NmwVzdX+flPKnbmoX3ix21s8Dv/tFKfScWel46cjd3LhiQPMZZw
jIrR08RDZkPYUC+44F00S8V2fSxNDypgw7tHWuXfxGjYqkpWik8hG5q9y+cW
SdAwb33bT16lbPj2sSvvlDQNix1PXOVRywbiutoXl0XIS+jHg1rZMOdcppcs
T8NO26k3R31mg5QERD5TpGF7U+qDE7+xQfGot5y+Cg1bEW1x7+4QG9S0OAf3
q9GwlzGN62rH2aDbefZRhgYNozs91fpvmg2GKYtn3mnRMJOOoX0DJBv+try/
VahDw1z+/z7kf4+s5Y4=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$22914#2"]& ]}}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {
          
          PointBox[{{0.5235987755982989, 0.58}, {1.5707963267948966`, 0.46}, {
           2.6179938779914944`, 0.64}}], {{
            
            LineBox[{{0.5235987755982989, 0.74122911234224}, {
             0.5235987755982989, 0.41877088765775994`}}], 
            LineBox[{
              Offset[{1.5, 0}, {0.5235987755982989, 0.74122911234224}], 
              Offset[{-1.5, 0}, {0.5235987755982989, 0.74122911234224}]}], 
            LineBox[{
              Offset[{1.5, 0}, {0.5235987755982989, 0.41877088765775994`}], 
              
              Offset[{-1.5, 0}, {0.5235987755982989, 
               0.41877088765775994`}]}]}, {
            
            LineBox[{{1.5707963267948966`, 0.5602236152442706}, {
             1.5707963267948966`, 0.3597763847557295}}], 
            LineBox[{
              Offset[{1.5, 0}, {1.5707963267948966`, 0.5602236152442706}], 
              Offset[{-1.5, 0}, {1.5707963267948966`, 0.5602236152442706}]}], 
            
            LineBox[{
              Offset[{1.5, 0}, {1.5707963267948966`, 0.3597763847557295}], 
              
              Offset[{-1.5, 0}, {1.5707963267948966`, 
               0.3597763847557295}]}]}, {
            
            LineBox[{{2.6179938779914944`, 0.7818309364893801}, {
             2.6179938779914944`, 0.49816906351062}}], 
            LineBox[{
              Offset[{1.5, 0}, {2.6179938779914944`, 0.7818309364893801}], 
              Offset[{-1.5, 0}, {2.6179938779914944`, 0.7818309364893801}]}], 
            
            LineBox[{
              Offset[{1.5, 0}, {2.6179938779914944`, 0.49816906351062}], 
              
              Offset[{-1.5, 0}, {2.6179938779914944`, 
               0.49816906351062}]}]}}}}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {
          
          PointBox[{{0.5235987755982989, 0.83}, {1.5707963267948966`, 0.7}, {
           2.6179938779914944`, 0.8}}], {{
            
            LineBox[{{0.5235987755982989, 0.938552708095112}, {
             0.5235987755982989, 0.7214472919048879}}], 
            LineBox[{
              Offset[{1.5, 0}, {0.5235987755982989, 0.938552708095112}], 
              Offset[{-1.5, 0}, {0.5235987755982989, 0.938552708095112}]}], 
            LineBox[{
              Offset[{1.5, 0}, {0.5235987755982989, 0.7214472919048879}], 
              Offset[{-1.5, 0}, {0.5235987755982989, 0.7214472919048879}]}]}, {
            
            LineBox[{{1.5707963267948966`, 0.8159551637487524}, {
             1.5707963267948966`, 0.5840448362512475}}], 
            LineBox[{
              Offset[{1.5, 0}, {1.5707963267948966`, 0.8159551637487524}], 
              Offset[{-1.5, 0}, {1.5707963267948966`, 0.8159551637487524}]}], 
            
            LineBox[{
              Offset[{1.5, 0}, {1.5707963267948966`, 0.5840448362512475}], 
              
              Offset[{-1.5, 0}, {1.5707963267948966`, 
               0.5840448362512475}]}]}, {
            
            LineBox[{{2.6179938779914944`, 0.9239612842786005}, {
             2.6179938779914944`, 0.6760387157213996}}], 
            LineBox[{
              Offset[{1.5, 0}, {2.6179938779914944`, 0.9239612842786005}], 
              Offset[{-1.5, 0}, {2.6179938779914944`, 0.9239612842786005}]}], 
            
            LineBox[{
              Offset[{1.5, 0}, {2.6179938779914944`, 0.6760387157213996}], 
              
              Offset[{-1.5, 0}, {2.6179938779914944`, 
               0.6760387157213996}]}]}}}}, {}}}, {}, {}, {{}, {}}}}, {
    Frame -> True, FrameLabel -> {
       FormBox["\"MT Angle (Radians)\"", TraditionalForm], 
       FormBox["\"ToW Fraction\"", TraditionalForm]}, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 3.1415925894756573`}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"1000 Simple Theory\"", "\"500 Simple Theory\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"1000 Experimental +/- 95% CI\"", 
           "\"500 Experimental +/- 95% CI\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.696203515524653*^9, 3.696203620048111*^9, 
  3.696628864957629*^9, 3.696632569939497*^9, 3.6966326940882072`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"p", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"konMacro", "\[Rule]", "2"}], ",", 
          RowBox[{"n", "\[Rule]", "15"}], ",", 
          RowBox[{"L", "\[Rule]", ".057"}], ",", 
          RowBox[{"R", "\[Rule]", ".5"}], ",", 
          RowBox[{"v", "\[Rule]", "1"}]}], "}"}]}], "/.", 
       RowBox[{"s", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", ".5"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1000 Simple Theory\>\"", ",", "\"\<500 Simple Theory\>\""}], 
       "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data500", ",", "data1000"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1000 Experimental +/- 95% CI\>\"", ",", 
        "\"\<500 Experimental +/- 95% CI\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MT Angle (Radians)\>\"", ",", "\"\<ToW Fraction\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.695764393435755*^9, 3.695764410275672*^9}, {
   3.695764527467684*^9, 3.6957645661725807`*^9}, 3.695764692741234*^9, {
   3.6957649143556433`*^9, 3.695764951363006*^9}, {3.6957655053707657`*^9, 
   3.695765521205729*^9}, {3.6957655879862432`*^9, 3.6957656828491373`*^9}, {
   3.695769048428841*^9, 3.695769078475686*^9}, {3.695769131856084*^9, 
   3.695769344226081*^9}, {3.696202685574037*^9, 3.69620271333994*^9}, {
   3.696202909617395*^9, 3.69620291807694*^9}, {3.6962032430160418`*^9, 
   3.6962032559829683`*^9}, {3.696203297380231*^9, 3.696203297738803*^9}, {
   3.6962037838893547`*^9, 3.696203792590006*^9}, {3.696203835937508*^9, 
   3.696203839153076*^9}, {3.6962038724516373`*^9, 3.696203875418762*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$2860#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
f/XwpA0=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$2860#2"]& ]}}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {
          
          PointBox[{{0.5235987755982989, 0.58}, {1.5707963267948966`, 0.46}, {
           2.6179938779914944`, 0.64}}], {{
            
            LineBox[{{0.5235987755982989, 0.74122911234224}, {
             0.5235987755982989, 0.41877088765775994`}}], 
            LineBox[{
              Offset[{1.5, 0}, {0.5235987755982989, 0.74122911234224}], 
              Offset[{-1.5, 0}, {0.5235987755982989, 0.74122911234224}]}], 
            LineBox[{
              Offset[{1.5, 0}, {0.5235987755982989, 0.41877088765775994`}], 
              
              Offset[{-1.5, 0}, {0.5235987755982989, 
               0.41877088765775994`}]}]}, {
            
            LineBox[{{1.5707963267948966`, 0.5602236152442706}, {
             1.5707963267948966`, 0.3597763847557295}}], 
            LineBox[{
              Offset[{1.5, 0}, {1.5707963267948966`, 0.5602236152442706}], 
              Offset[{-1.5, 0}, {1.5707963267948966`, 0.5602236152442706}]}], 
            
            LineBox[{
              Offset[{1.5, 0}, {1.5707963267948966`, 0.3597763847557295}], 
              
              Offset[{-1.5, 0}, {1.5707963267948966`, 
               0.3597763847557295}]}]}, {
            
            LineBox[{{2.6179938779914944`, 0.7818309364893801}, {
             2.6179938779914944`, 0.49816906351062}}], 
            LineBox[{
              Offset[{1.5, 0}, {2.6179938779914944`, 0.7818309364893801}], 
              Offset[{-1.5, 0}, {2.6179938779914944`, 0.7818309364893801}]}], 
            
            LineBox[{
              Offset[{1.5, 0}, {2.6179938779914944`, 0.49816906351062}], 
              Offset[{-1.5, 0}, {2.6179938779914944`, 
               0.49816906351062}]}]}}}}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], {
          
          PointBox[{{0.5235987755982989, 0.83}, {1.5707963267948966`, 0.7}, {
           2.6179938779914944`, 0.8}}], {{
            
            LineBox[{{0.5235987755982989, 0.938552708095112}, {
             0.5235987755982989, 0.7214472919048879}}], 
            LineBox[{
              Offset[{1.5, 0}, {0.5235987755982989, 0.938552708095112}], 
              Offset[{-1.5, 0}, {0.5235987755982989, 0.938552708095112}]}], 
            LineBox[{
              Offset[{1.5, 0}, {0.5235987755982989, 0.7214472919048879}], 
              Offset[{-1.5, 0}, {0.5235987755982989, 0.7214472919048879}]}]}, {
            
            LineBox[{{1.5707963267948966`, 0.8159551637487524}, {
             1.5707963267948966`, 0.5840448362512475}}], 
            LineBox[{
              Offset[{1.5, 0}, {1.5707963267948966`, 0.8159551637487524}], 
              Offset[{-1.5, 0}, {1.5707963267948966`, 0.8159551637487524}]}], 
            
            LineBox[{
              Offset[{1.5, 0}, {1.5707963267948966`, 0.5840448362512475}], 
              
              Offset[{-1.5, 0}, {1.5707963267948966`, 
               0.5840448362512475}]}]}, {
            
            LineBox[{{2.6179938779914944`, 0.9239612842786005}, {
             2.6179938779914944`, 0.6760387157213996}}], 
            LineBox[{
              Offset[{1.5, 0}, {2.6179938779914944`, 0.9239612842786005}], 
              Offset[{-1.5, 0}, {2.6179938779914944`, 0.9239612842786005}]}], 
            
            LineBox[{
              Offset[{1.5, 0}, {2.6179938779914944`, 0.6760387157213996}], 
              
              Offset[{-1.5, 0}, {2.6179938779914944`, 
               0.6760387157213996}]}]}}}}, {}}}, {}, {}, {{}, {}}}}, {
    Frame -> True, FrameLabel -> {
       FormBox["\"MT Angle (Radians)\"", TraditionalForm], 
       FormBox["\"ToW Fraction\"", TraditionalForm]}, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 3.1415925894756573`}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"1000 Simple Theory\"", "\"500 Simple Theory\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"1000 Experimental +/- 95% CI\"", 
           "\"500 Experimental +/- 95% CI\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.695764566699239*^9, 3.6957646936109247`*^9, {3.695764931961094*^9, 
   3.695764951838558*^9}, {3.69576550649195*^9, 3.695765521713854*^9}, {
   3.6957656448313217`*^9, 3.695765683260594*^9}, {3.695766246507722*^9, 
   3.695766293260189*^9}, 3.695769081005357*^9, 3.695769144426259*^9, 
   3.695769174499494*^9, {3.695769230925194*^9, 3.695769271436819*^9}, 
   3.6957693448107777`*^9, 3.696202725923736*^9, {3.696203283440282*^9, 
   3.696203298520686*^9}, {3.69620378585503*^9, 3.696203792984747*^9}, {
   3.6962038366599007`*^9, 3.6962038405654793`*^9}, 3.69620387601123*^9, 
   3.6966288650533733`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"pdeg", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"konMacro", "\[Rule]", "1"}], ",", 
          RowBox[{"n", "\[Rule]", "15"}], ",", 
          RowBox[{"L", "\[Rule]", ".057"}], ",", 
          RowBox[{"R", "\[Rule]", ".5"}], ",", 
          RowBox[{"v", "\[Rule]", "1"}]}], "}"}]}], "/.", 
       RowBox[{"s", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{".25", ",", ".5", ",", ".75", ",", "1"}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "180"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<.25\[Mu]m\>\"", ",", "\"\<.5\[Mu]m\>\"", ",", 
          "\"\<.75\[Mu]m\>\"", ",", "\"\<1\[Mu]m\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<BlueGreenYellow\>\"", "]"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"1", "/", "3"}]}], "]"}]}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data500deg", ",", "data1000deg"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<.5\[Mu]m Experiment \[PlusMinus] 95% CI\>\"", ",", 
          "\"\<1\[Mu]m Experiment \[PlusMinus] 95% CI\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<BlueGreenYellow\>\"", "]"}], "[", 
         RowBox[{"1", "/", "3"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<BlueGreenYellow\>\"", "]"}], "[", "1",
          "]"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MT Angle (Degrees)\>\"", ",", "\"\<ToW Fraction\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.696629370805345*^9, 3.696629450755967*^9}, {
  3.6966296792246227`*^9, 3.696629724628305*^9}, {3.696629780013289*^9, 
  3.696629904133102*^9}, {3.696630072546938*^9, 3.6966300866526527`*^9}, {
  3.69663017677711*^9, 3.6966301789587097`*^9}, {3.6966302567533216`*^9, 
  3.696630265718584*^9}, {3.696630345651527*^9, 3.696630387252694*^9}, {
  3.696630499403963*^9, 3.6966308165060387`*^9}, {3.6966308930661*^9, 
  3.696630927217087*^9}, {3.696631086033901*^9, 3.6966310864040537`*^9}, {
  3.69663114349781*^9, 3.696631145601239*^9}, {3.696631343106597*^9, 
  3.696631344691909*^9}, {3.696631865364012*^9, 3.696631886670535*^9}, {
  3.6966319226600637`*^9, 3.6966319393763437`*^9}, {3.696632043011346*^9, 
  3.6966320448118467`*^9}, {3.696632075592744*^9, 3.69663211367232*^9}, {
  3.6966322508886833`*^9, 3.6966322803072157`*^9}, {3.6966328065586643`*^9, 
  3.6966328066251907`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       TagBox[
        {RGBColor[0.122103, 0.00901808, 0.39826], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
PKTTdGBmMYoD//8/5P8AFRhwOQ==
          "]]},
        Annotation[#, "Charting`Private`Tag$28124#1"]& ], 
       TagBox[
        {RGBColor[0.097699, 0.498132, 0.548165], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
ai6cA/9/H/I/PIoukg==
          "]]},
        Annotation[#, "Charting`Private`Tag$28124#2"]& ], 
       TagBox[
        {RGBColor[0.329526, 0.762208, 0.474596], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
JpQJfe6KOumLbKTVarawcokJ/38f8j+Ty2lN
          "]]},
        Annotation[#, "Charting`Private`Tag$28124#3"]& ], 
       TagBox[
        {RGBColor[0.914809, 0.897673, 0.350652], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
H8WB//8f8n+qbl28
          "]]},
        Annotation[#, 
         "Charting`Private`Tag$28124#4"]& ]}, {}, {}}, {{}, {{}, 
       {RGBColor[0.097699, 0.498132, 0.548165], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{30., 0.83}, {90., 0.7}, {150., 
         0.8}}], {{
          LineBox[{{30., 0.938552708095112}, {30., 0.7214472919048879}}], 
          LineBox[{
           Offset[{1.5, 0}, {30., 0.938552708095112}], 
            Offset[{-1.5, 0}, {30., 0.938552708095112}]}], 
          LineBox[{
           Offset[{1.5, 0}, {30., 0.7214472919048879}], 
            Offset[{-1.5, 0}, {30., 0.7214472919048879}]}]}, {
          LineBox[{{90., 0.8159551637487524}, {90., 0.5840448362512475}}], 
          LineBox[{
           Offset[{1.5, 0}, {90., 0.8159551637487524}], 
            Offset[{-1.5, 0}, {90., 0.8159551637487524}]}], 
          LineBox[{
           Offset[{1.5, 0}, {90., 0.5840448362512475}], 
            Offset[{-1.5, 0}, {90., 0.5840448362512475}]}]}, {
          LineBox[{{150., 0.9239612842786005}, {150., 0.6760387157213996}}], 
          LineBox[{
           Offset[{1.5, 0}, {150., 0.9239612842786005}], 
            Offset[{-1.5, 0}, {150., 0.9239612842786005}]}], 
          LineBox[{
           Offset[{1.5, 0}, {150., 0.6760387157213996}], 
            Offset[{-1.5, 0}, {150., 0.6760387157213996}]}]}}}, 
       {RGBColor[0.914809, 0.897673, 0.350652], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{30., 0.58}, {90., 0.46}, {150., 
         0.64}}], {{
          LineBox[{{30., 0.74122911234224}, {30., 0.41877088765775994`}}], 
          LineBox[{
           Offset[{1.5, 0}, {30., 0.74122911234224}], 
            Offset[{-1.5, 0}, {30., 0.74122911234224}]}], 
          LineBox[{
           Offset[{1.5, 0}, {30., 0.41877088765775994`}], 
            Offset[{-1.5, 0}, {30., 0.41877088765775994`}]}]}, {
          LineBox[{{90., 0.5602236152442706}, {90., 0.3597763847557295}}], 
          LineBox[{
           Offset[{1.5, 0}, {90., 0.5602236152442706}], 
            Offset[{-1.5, 0}, {90., 0.5602236152442706}]}], 
          LineBox[{
           Offset[{1.5, 0}, {90., 0.3597763847557295}], 
            Offset[{-1.5, 0}, {90., 0.3597763847557295}]}]}, {
          LineBox[{{150., 0.7818309364893801}, {150., 0.49816906351062}}], 
          LineBox[{
           Offset[{1.5, 0}, {150., 0.7818309364893801}], 
            Offset[{-1.5, 0}, {150., 0.7818309364893801}]}], 
          LineBox[{
           Offset[{1.5, 0}, {150., 0.49816906351062}], 
            Offset[{-1.5, 0}, {150., 
             0.49816906351062}]}]}}}, {}}, {}, {}, {{}, {}}}}, {InsetBox[
      TemplateBox[{
       "\".25\[Mu]m\"","\".5\[Mu]m\"","\".75\[Mu]m\"","\"1\[Mu]m\""},
       "LineLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.122103, 0.00901808, 0.39826]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.122103, 0.00901808, 0.39826]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.097699, 0.498132, 0.548165]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.097699, 0.498132, 0.548165]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.329526, 0.762208, 0.474596]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.329526, 0.762208, 0.474596]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.914809, 0.897673, 0.350652]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.914809, 0.897673, 0.350652]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.081402, 0.006012053333333333, 0.26550666666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.097699, 0.498132, 0.548165], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.06513266666666667, 0.33208800000000005`, 
                    0.36544333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.097699, 0.498132, 0.548165]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.097699, 0.498132, 0.548165]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.097699, 0.498132, 0.548165], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.329526, 0.762208, 0.474596], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.219684, 0.5081386666666667, 0.31639733333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.329526, 0.762208, 0.474596]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.329526, 0.762208, 0.474596]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.329526, 0.762208, 0.474596], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.99, 0.01}], ImageScaled[{1, 0}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], InsetBox[
      TemplateBox[{
       "\".5\[Mu]m Experiment \[PlusMinus] 95% CI\"",
        "\"1\[Mu]m Experiment \[PlusMinus] 95% CI\""},
       "PointLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.097699, 0.498132, 0.548165]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.097699, 0.498132, 0.548165]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.914809, 0.897673, 0.350652]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.914809, 0.897673, 0.350652]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.097699, 0.498132, 0.548165], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.06513266666666667, 0.33208800000000005`, 
                    0.36544333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.097699, 0.498132, 0.548165]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.097699, 0.498132, 0.548165]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.097699, 0.498132, 0.548165], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"False", ",", "False"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox["\"MT Angle (Degrees)\"", TraditionalForm], 
     FormBox["\"ToW Fraction\"", TraditionalForm]},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0., 179.9999963265306}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.122103, 0.00901808, 0.39826]], 
           Line[CompressedData["
1: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
PKTTdGBmMYoD//8/5P8AFRhwOQ==
            "]]}, 
          "Charting`Private`Tag$28124#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.097699, 0.498132, 0.548165]], 
           Line[CompressedData["
1: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
ai6cA/9/H/I/PIoukg==
            "]]}, "Charting`Private`Tag$28124#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.329526, 0.762208, 0.474596]], 
           Line[CompressedData["
1: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
JpQJfe6KOumLbKTVarawcokJ/38f8j+Ty2lN
            "]]}, 
          "Charting`Private`Tag$28124#3"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.914809, 0.897673, 0.350652]], 
           Line[CompressedData["
1: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
H8WB//8f8n+qbl28
            "]]}, 
          "Charting`Private`Tag$28124#4"]}}, {}, {}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.097699, 0.498132, 0.548165]], {
           Point[{{30., 0.83}, {90., 0.7}, {150., 0.8}}], {{
             Line[{{30., 0.938552708095112}, {30., 0.7214472919048879}}], 
             Line[{
               Offset[{1.5, 0}, {30., 0.938552708095112}], 
               Offset[{-1.5, 0}, {30., 0.938552708095112}]}], 
             Line[{
               Offset[{1.5, 0}, {30., 0.7214472919048879}], 
               Offset[{-1.5, 0}, {30., 0.7214472919048879}]}]}, {
             Line[{{90., 0.8159551637487524}, {90., 0.5840448362512475}}], 
             Line[{
               Offset[{1.5, 0}, {90., 0.8159551637487524}], 
               Offset[{-1.5, 0}, {90., 0.8159551637487524}]}], 
             Line[{
               Offset[{1.5, 0}, {90., 0.5840448362512475}], 
               Offset[{-1.5, 0}, {90., 0.5840448362512475}]}]}, {
             Line[{{150., 0.9239612842786005}, {150., 0.6760387157213996}}], 
             Line[{
               Offset[{1.5, 0}, {150., 0.9239612842786005}], 
               Offset[{-1.5, 0}, {150., 0.9239612842786005}]}], 
             Line[{
               Offset[{1.5, 0}, {150., 0.6760387157213996}], 
               Offset[{-1.5, 0}, {150., 0.6760387157213996}]}]}}}}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.914809, 0.897673, 0.350652]], {
           Point[{{30., 0.58}, {90., 0.46}, {150., 0.64}}], {{
             Line[{{30., 0.74122911234224}, {30., 0.41877088765775994`}}], 
             Line[{
               Offset[{1.5, 0}, {30., 0.74122911234224}], 
               Offset[{-1.5, 0}, {30., 0.74122911234224}]}], 
             Line[{
               Offset[{1.5, 0}, {30., 0.41877088765775994`}], 
               Offset[{-1.5, 0}, {30., 0.41877088765775994`}]}]}, {
             Line[{{90., 0.5602236152442706}, {90., 0.3597763847557295}}], 
             Line[{
               Offset[{1.5, 0}, {90., 0.5602236152442706}], 
               Offset[{-1.5, 0}, {90., 0.5602236152442706}]}], 
             Line[{
               Offset[{1.5, 0}, {90., 0.3597763847557295}], 
               Offset[{-1.5, 0}, {90., 0.3597763847557295}]}]}, {
             Line[{{150., 0.7818309364893801}, {150., 0.49816906351062}}], 
             Line[{
               Offset[{1.5, 0}, {150., 0.7818309364893801}], 
               Offset[{-1.5, 0}, {150., 0.7818309364893801}]}], 
             Line[{
               Offset[{1.5, 0}, {150., 0.49816906351062}], 
               
               Offset[{-1.5, 0}, {150., 
                0.49816906351062}]}]}}}}, {}}}, {}, {}, {{}, {}}}}, {
     Frame -> True, FrameLabel -> {"MT Angle (Degrees)", "ToW Fraction"}, 
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0., 179.9999963265306}, {0, 1}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.097699, 0.498132, 0.548165]], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.914809, 0.897673, 0.350652]]}, {
        ".5\[Mu]m Experiment \[PlusMinus] 95% CI", 
         "1\[Mu]m Experiment \[PlusMinus] 95% CI"}, 
        LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
        Joined -> {False, False}, LabelStyle -> {}, LegendLayout -> 
        "Column"]]], {Left, Bottom}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.696632275923959*^9, 3.6966322807610817`*^9}, 
   3.6966328070098886`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"pdeg", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"konMacro", "\[Rule]", "1"}], ",", 
          RowBox[{"n", "\[Rule]", "15"}], ",", 
          RowBox[{"L", "\[Rule]", ".057"}], ",", 
          RowBox[{"R", "\[Rule]", ".5"}], ",", 
          RowBox[{"v", "\[Rule]", "1"}]}], "}"}]}], "/.", 
       RowBox[{"s", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", ".25", ",", ".5", ",", ".75", ",", "1"}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "180"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.01"}], "}"}]}], ",", 
     RowBox[{"Evaluated", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<0\[Mu]m\>\"", ",", "\"\<.25\[Mu]m\>\"", ",", "\"\<.5\[Mu]m\>\"",
           ",", "\"\<.75\[Mu]m\>\"", ",", "\"\<1\[Mu]m\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<BlueGreenYellow\>\"", "]"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"1", "/", "4"}]}], "]"}]}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ErrorListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data0deg", ",", "data500deg", ",", "data1000deg"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<0\[Mu]m Experiment \[PlusMinus] 95% CI\>\"", ",", 
          "\"\<.5\[Mu]m Experiment \[PlusMinus] 95% CI\>\"", ",", 
          "\"\<1\[Mu]m Experiment \[PlusMinus] 95% CI\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<BlueGreenYellow\>\"", "]"}], "[", "0",
          "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<BlueGreenYellow\>\"", "]"}], "[", 
         RowBox[{"1", "/", "2"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<BlueGreenYellow\>\"", "]"}], "[", "1",
          "]"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MT Angle (Degrees)\>\"", ",", "\"\<ToW Fraction\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.696629370805345*^9, 3.696629450755967*^9}, {
  3.6966296792246227`*^9, 3.696629724628305*^9}, {3.696629780013289*^9, 
  3.696629904133102*^9}, {3.696630072546938*^9, 3.6966300866526527`*^9}, {
  3.69663017677711*^9, 3.6966301789587097`*^9}, {3.6966302567533216`*^9, 
  3.696630265718584*^9}, {3.696630345651527*^9, 3.696630387252694*^9}, {
  3.696630499403963*^9, 3.6966308165060387`*^9}, {3.6966308930661*^9, 
  3.696630927217087*^9}, {3.696631086033901*^9, 3.6966310864040537`*^9}, {
  3.69663114349781*^9, 3.696631145601239*^9}, {3.696631343106597*^9, 
  3.696631344691909*^9}, {3.696631865364012*^9, 3.696631886670535*^9}, {
  3.6966319226600637`*^9, 3.6966319393763437`*^9}, {3.696632043011346*^9, 
  3.6966320448118467`*^9}, {3.696632075592744*^9, 3.69663211367232*^9}, {
  3.696632835065534*^9, 3.696632835121127*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       TagBox[
        {RGBColor[0.122103, 0.00901808, 0.39826], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
/wMfjP/s
          "]]},
        Annotation[#, "Charting`Private`Tag$31377#1"]& ], 
       TagBox[
        {RGBColor[0.09084624999999999, 0.38888849999999997`, 0.5291335], 
         AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
PKTTdGBmMYoD//8/5P8AFRhwOQ==
          "]]},
        Annotation[#, "Charting`Private`Tag$31377#2"]& ], 
       TagBox[
        {RGBColor[0.175507, 0.652273, 0.528496], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
ai6cA/9/H/I/PIoukg==
          "]]},
        Annotation[#, "Charting`Private`Tag$31377#3"]& ], 
       TagBox[
        {RGBColor[0.4507175, 0.8010995000000001, 0.441349], AbsoluteThickness[
         1.6], Opacity[1.], LineBox[CompressedData["
1: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
JpQJfe6KOumLbKTVarawcokJ/38f8j+Ty2lN
          "]]},
        Annotation[#, "Charting`Private`Tag$31377#4"]& ], 
       TagBox[
        {RGBColor[0.914809, 0.897673, 0.350652], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
H8WB//8f8n+qbl28
          "]]},
        Annotation[#, 
         "Charting`Private`Tag$31377#5"]& ]}, {}, {}}, {{}, {{}, 
       {RGBColor[0.122103, 0.00901808, 0.39826], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{30., 0.79}, {90., 0.93}, {150., 
         0.89}}], {{
          LineBox[{{30., 0.9195052772751183}, {30., 0.6604947227248817}}], 
          LineBox[{
           Offset[{1.5, 0}, {30., 0.9195052772751183}], 
            Offset[{-1.5, 0}, {30., 0.9195052772751183}]}], 
          LineBox[{
           Offset[{1.5, 0}, {30., 0.6604947227248817}], 
            Offset[{-1.5, 0}, {30., 0.6604947227248817}]}]}, {
          LineBox[{{90., 0.99510593193313}, {90., 0.8648940680668701}}], 
          LineBox[{
           Offset[{1.5, 0}, {90., 0.99510593193313}], 
            Offset[{-1.5, 0}, {90., 0.99510593193313}]}], 
          LineBox[{
           Offset[{1.5, 0}, {90., 0.8648940680668701}], 
            Offset[{-1.5, 0}, {90., 0.8648940680668701}]}]}, {
          LineBox[{{150., 1.0080226971265995`}, {150., 0.7719773028734005}}], 
          LineBox[{
           Offset[{1.5, 0}, {150., 1.0080226971265995`}], 
            Offset[{-1.5, 0}, {150., 1.0080226971265995`}]}], 
          LineBox[{
           Offset[{1.5, 0}, {150., 0.7719773028734005}], 
            Offset[{-1.5, 0}, {150., 0.7719773028734005}]}]}}}, 
       {RGBColor[0.175507, 0.652273, 0.528496], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{30., 0.83}, {90., 0.7}, {150., 
         0.8}}], {{
          LineBox[{{30., 0.938552708095112}, {30., 0.7214472919048879}}], 
          LineBox[{
           Offset[{1.5, 0}, {30., 0.938552708095112}], 
            Offset[{-1.5, 0}, {30., 0.938552708095112}]}], 
          LineBox[{
           Offset[{1.5, 0}, {30., 0.7214472919048879}], 
            Offset[{-1.5, 0}, {30., 0.7214472919048879}]}]}, {
          LineBox[{{90., 0.8159551637487524}, {90., 0.5840448362512475}}], 
          LineBox[{
           Offset[{1.5, 0}, {90., 0.8159551637487524}], 
            Offset[{-1.5, 0}, {90., 0.8159551637487524}]}], 
          LineBox[{
           Offset[{1.5, 0}, {90., 0.5840448362512475}], 
            Offset[{-1.5, 0}, {90., 0.5840448362512475}]}]}, {
          LineBox[{{150., 0.9239612842786005}, {150., 0.6760387157213996}}], 
          LineBox[{
           Offset[{1.5, 0}, {150., 0.9239612842786005}], 
            Offset[{-1.5, 0}, {150., 0.9239612842786005}]}], 
          LineBox[{
           Offset[{1.5, 0}, {150., 0.6760387157213996}], 
            Offset[{-1.5, 0}, {150., 0.6760387157213996}]}]}}}, 
       {RGBColor[0.914809, 0.897673, 0.350652], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{30., 0.58}, {90., 0.46}, {150., 
         0.64}}], {{
          LineBox[{{30., 0.74122911234224}, {30., 0.41877088765775994`}}], 
          LineBox[{
           Offset[{1.5, 0}, {30., 0.74122911234224}], 
            Offset[{-1.5, 0}, {30., 0.74122911234224}]}], 
          LineBox[{
           Offset[{1.5, 0}, {30., 0.41877088765775994`}], 
            Offset[{-1.5, 0}, {30., 0.41877088765775994`}]}]}, {
          LineBox[{{90., 0.5602236152442706}, {90., 0.3597763847557295}}], 
          LineBox[{
           Offset[{1.5, 0}, {90., 0.5602236152442706}], 
            Offset[{-1.5, 0}, {90., 0.5602236152442706}]}], 
          LineBox[{
           Offset[{1.5, 0}, {90., 0.3597763847557295}], 
            Offset[{-1.5, 0}, {90., 0.3597763847557295}]}]}, {
          LineBox[{{150., 0.7818309364893801}, {150., 0.49816906351062}}], 
          LineBox[{
           Offset[{1.5, 0}, {150., 0.7818309364893801}], 
            Offset[{-1.5, 0}, {150., 0.7818309364893801}]}], 
          LineBox[{
           Offset[{1.5, 0}, {150., 0.49816906351062}], 
            Offset[{-1.5, 0}, {150., 
             0.49816906351062}]}]}}}, {}}, {}, {}, {{}, {}}}}, {InsetBox[
      TemplateBox[{
       "\"0\[Mu]m\"","\".25\[Mu]m\"","\".5\[Mu]m\"","\".75\[Mu]m\"",
        "\"1\[Mu]m\""},
       "LineLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.122103, 0.00901808, 0.39826]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.122103, 0.00901808, 0.39826]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09084624999999999, 0.38888849999999997`, 0.5291335]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09084624999999999, 0.38888849999999997`, 
                    0.5291335]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.175507, 0.652273, 0.528496]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.175507, 0.652273, 0.528496]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.4507175, 0.8010995000000001, 0.441349]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.4507175, 0.8010995000000001, 0.441349]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.914809, 0.897673, 0.350652]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.914809, 0.897673, 0.350652]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.081402, 0.006012053333333333, 0.26550666666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09084624999999999, 0.38888849999999997`, 0.5291335], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.06056416666666666, 0.259259, 0.3527556666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.09084624999999999, 0.38888849999999997, \
0.5291335]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09084624999999999, 0.38888849999999997`, 0.5291335]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09084624999999999, 0.38888849999999997`, 0.5291335], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.175507, 0.652273, 0.528496], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.11700466666666667`, 0.43484866666666666`, 
                    0.3523306666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.175507, 0.652273, 0.528496]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.175507, 0.652273, 0.528496]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.175507, 0.652273, 0.528496], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4507175, 0.8010995000000001, 0.441349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.30047833333333335`, 0.5340663333333334, 
                    0.2942326666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4507175, 0.8010995000000001, 0.441349]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4507175, 0.8010995000000001, 0.441349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4507175, 0.8010995000000001, 0.441349], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.99, 0.01}], ImageScaled[{1, 0}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], InsetBox[
      TemplateBox[{
       "\"0\[Mu]m Experiment \[PlusMinus] 95% CI\"",
        "\".5\[Mu]m Experiment \[PlusMinus] 95% CI\"",
        "\"1\[Mu]m Experiment \[PlusMinus] 95% CI\""},
       "PointLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.122103, 0.00901808, 0.39826]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.122103, 0.00901808, 0.39826]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.175507, 0.652273, 0.528496]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.175507, 0.652273, 0.528496]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.914809, 0.897673, 0.350652]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.914809, 0.897673, 0.350652]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.122103, 0.00901808, 0.39826], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.081402, 0.006012053333333333, 0.26550666666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.122103, 0.00901808, 0.39826]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.122103, 0.00901808, 0.39826]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.122103, 0.00901808, 0.39826], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.175507, 0.652273, 0.528496], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.11700466666666667`, 0.43484866666666666`, 
                    0.3523306666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.175507, 0.652273, 0.528496]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.175507, 0.652273, 0.528496]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.175507, 0.652273, 0.528496], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.914809, 0.897673, 0.350652], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6098726666666667, 0.5984486666666667, 
                    0.23376800000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.914809, 0.897673, 0.350652]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.914809, 0.897673, 0.350652]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.914809, 0.897673, 0.350652], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox["\"MT Angle (Degrees)\"", TraditionalForm], 
     FormBox["\"ToW Fraction\"", TraditionalForm]},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0., 179.9999963265306}, {0, 1.01}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.122103, 0.00901808, 0.39826]], 
           Line[CompressedData["
1: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
/wMfjP/s
            "]]}, "Charting`Private`Tag$31377#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.09084624999999999, 0.38888849999999997`, 0.5291335]], 
           Line[CompressedData["
1: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
PKTTdGBmMYoD//8/5P8AFRhwOQ==
            "]]}, 
          "Charting`Private`Tag$31377#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.175507, 0.652273, 0.528496]], 
           Line[CompressedData["
1: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
ai6cA/9/H/I/PIoukg==
            "]]}, "Charting`Private`Tag$31377#3"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.4507175, 0.8010995000000001, 0.441349]], 
           Line[CompressedData["
1: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
JpQJfe6KOumLbKTVarawcokJ/38f8j+Ty2lN
            "]]}, 
          "Charting`Private`Tag$31377#4"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.914809, 0.897673, 0.350652]], 
           Line[CompressedData["
1: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
H8WB//8f8n+qbl28
            "]]}, 
          "Charting`Private`Tag$31377#5"]}}, {}, {}}, {{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.122103, 0.00901808, 0.39826]], {
           Point[{{30., 0.79}, {90., 0.93}, {150., 0.89}}], {{
             Line[{{30., 0.9195052772751183}, {30., 0.6604947227248817}}], 
             Line[{
               Offset[{1.5, 0}, {30., 0.9195052772751183}], 
               Offset[{-1.5, 0}, {30., 0.9195052772751183}]}], 
             Line[{
               Offset[{1.5, 0}, {30., 0.6604947227248817}], 
               Offset[{-1.5, 0}, {30., 0.6604947227248817}]}]}, {
             Line[{{90., 0.99510593193313}, {90., 0.8648940680668701}}], 
             Line[{
               Offset[{1.5, 0}, {90., 0.99510593193313}], 
               Offset[{-1.5, 0}, {90., 0.99510593193313}]}], 
             Line[{
               Offset[{1.5, 0}, {90., 0.8648940680668701}], 
               Offset[{-1.5, 0}, {90., 0.8648940680668701}]}]}, {
             Line[{{150., 1.0080226971265995`}, {150., 0.7719773028734005}}], 
             
             Line[{
               Offset[{1.5, 0}, {150., 1.0080226971265995`}], 
               Offset[{-1.5, 0}, {150., 1.0080226971265995`}]}], 
             Line[{
               Offset[{1.5, 0}, {150., 0.7719773028734005}], 
               Offset[{-1.5, 0}, {150., 0.7719773028734005}]}]}}}}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.175507, 0.652273, 0.528496]], {
           Point[{{30., 0.83}, {90., 0.7}, {150., 0.8}}], {{
             Line[{{30., 0.938552708095112}, {30., 0.7214472919048879}}], 
             Line[{
               Offset[{1.5, 0}, {30., 0.938552708095112}], 
               Offset[{-1.5, 0}, {30., 0.938552708095112}]}], 
             Line[{
               Offset[{1.5, 0}, {30., 0.7214472919048879}], 
               Offset[{-1.5, 0}, {30., 0.7214472919048879}]}]}, {
             Line[{{90., 0.8159551637487524}, {90., 0.5840448362512475}}], 
             Line[{
               Offset[{1.5, 0}, {90., 0.8159551637487524}], 
               Offset[{-1.5, 0}, {90., 0.8159551637487524}]}], 
             Line[{
               Offset[{1.5, 0}, {90., 0.5840448362512475}], 
               Offset[{-1.5, 0}, {90., 0.5840448362512475}]}]}, {
             Line[{{150., 0.9239612842786005}, {150., 0.6760387157213996}}], 
             Line[{
               Offset[{1.5, 0}, {150., 0.9239612842786005}], 
               Offset[{-1.5, 0}, {150., 0.9239612842786005}]}], 
             Line[{
               Offset[{1.5, 0}, {150., 0.6760387157213996}], 
               Offset[{-1.5, 0}, {150., 0.6760387157213996}]}]}}}}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.914809, 0.897673, 0.350652]], {
           Point[{{30., 0.58}, {90., 0.46}, {150., 0.64}}], {{
             Line[{{30., 0.74122911234224}, {30., 0.41877088765775994`}}], 
             Line[{
               Offset[{1.5, 0}, {30., 0.74122911234224}], 
               Offset[{-1.5, 0}, {30., 0.74122911234224}]}], 
             Line[{
               Offset[{1.5, 0}, {30., 0.41877088765775994`}], 
               Offset[{-1.5, 0}, {30., 0.41877088765775994`}]}]}, {
             Line[{{90., 0.5602236152442706}, {90., 0.3597763847557295}}], 
             Line[{
               Offset[{1.5, 0}, {90., 0.5602236152442706}], 
               Offset[{-1.5, 0}, {90., 0.5602236152442706}]}], 
             Line[{
               Offset[{1.5, 0}, {90., 0.3597763847557295}], 
               Offset[{-1.5, 0}, {90., 0.3597763847557295}]}]}, {
             Line[{{150., 0.7818309364893801}, {150., 0.49816906351062}}], 
             Line[{
               Offset[{1.5, 0}, {150., 0.7818309364893801}], 
               Offset[{-1.5, 0}, {150., 0.7818309364893801}]}], 
             Line[{
               Offset[{1.5, 0}, {150., 0.49816906351062}], 
               
               Offset[{-1.5, 0}, {150., 
                0.49816906351062}]}]}}}}, {}}}, {}, {}, {{}, {}}}}, {
     Frame -> True, FrameLabel -> {"MT Angle (Degrees)", "ToW Fraction"}, 
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0., 179.9999963265306}, {0, 1.01}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.122103, 0.00901808, 0.39826]], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.175507, 0.652273, 0.528496]], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.914809, 0.897673, 0.350652]]}, {
        "0\[Mu]m Experiment \[PlusMinus] 95% CI", 
         ".5\[Mu]m Experiment \[PlusMinus] 95% CI", 
         "1\[Mu]m Experiment \[PlusMinus] 95% CI"}, 
        LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
          False, Automatic}}, Joined -> {False, False, False}, 
        LabelStyle -> {}, LegendLayout -> "Column"]]], {Left, Bottom}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.696629381521586*^9, 3.696629453112504*^9, {3.696629709701144*^9, 
   3.6966297250029984`*^9}, {3.696629843786496*^9, 3.696629904746928*^9}, 
   3.6966300869857883`*^9, {3.696630153839286*^9, 3.6966301795112753`*^9}, {
   3.6966303575873957`*^9, 3.6966303876806307`*^9}, {3.6966305059207497`*^9, 
   3.696630544398066*^9}, {3.696630583886842*^9, 3.696630621356277*^9}, 
   3.696630652581161*^9, 3.696630727837237*^9, 3.6966308177263317`*^9, {
   3.696630902606632*^9, 3.696630927814253*^9}, 3.6966310872451057`*^9, 
   3.696631146722237*^9, {3.696631331985943*^9, 3.696631346407069*^9}, 
   3.6966317458208714`*^9, {3.696631866090806*^9, 3.696631887687476*^9}, {
   3.696631926579767*^9, 3.696631939857397*^9}, 3.6966320452738523`*^9, {
   3.696632088074191*^9, 3.696632114376089*^9}, 3.6966321571702957`*^9, 
   3.696632835468361*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<blah.pdf\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.692594735806203*^9, 3.692594780046028*^9}, {
  3.692595167506777*^9, 3.6925951692840014`*^9}}],

Cell[BoxData["\<\"blah.pdf\"\>"], "Output",
 CellChangeTimes->{3.696631748509692*^9, 3.696632192517661*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"p", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"konMacro", "\[Rule]", "k"}], ",", 
            RowBox[{"L", "\[Rule]", ".057"}], ",", 
            RowBox[{"R", "\[Rule]", ".5"}], ",", 
            RowBox[{"v", "\[Rule]", "1"}]}], "}"}]}], "/.", 
         RowBox[{"s", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", ".5"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], ",", 
       RowBox[{"Evaluated", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1000 Simple Theory\>\"", ",", "\"\<500 Simple Theory\>\""}], 
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ErrorListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"data1000", ",", "data500"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1000 Experimental +/- 95% CI\>\"", ",", 
          "\"\<500 Experimental +/- 95% CI\>\""}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<MT Angle (Radians)\>\"", ",", "\"\<ToW Fraction\>\""}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", ".001", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696203008606648*^9, 3.696203056577298*^9}, 
   3.6962030990418243`*^9, {3.6962031971465893`*^9, 3.6962032066174803`*^9}, {
   3.696632790526453*^9, 3.696632792989848*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 1.01, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], 0.001, 10}}, Typeset`size$$ = {
    576., {119., 123.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`k$26188$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = 0.001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$26188$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Plot[
         Evaluate[
          ReplaceAll[
           
           ReplaceAll[$CellContext`p, {$CellContext`konMacro -> \
$CellContext`k$$, $CellContext`L -> 0.057, $CellContext`R -> 
             0.5, $CellContext`v -> 1}], $CellContext`s -> {
            1, 0.5}]], {$CellContext`\[Theta], 0, Pi}, PlotRange -> {0, 1}, 
         Evaluated -> True, 
         PlotLegends -> {"1000 Simple Theory", "500 Simple Theory"}], 
        ErrorBarPlots`ErrorListPlot[{$CellContext`data1000, \
$CellContext`data500}, 
         PlotLegends -> {
          "1000 Experimental +/- 95% CI", "500 Experimental +/- 95% CI"}], 
        Frame -> True, FrameLabel -> {"MT Angle (Radians)", "ToW Fraction"}], 
      "Specifications" :> {{$CellContext`k$$, 0.001, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{621., {164., 170.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.696203057876934*^9, 3.69620310033873*^9, 3.696203207785459*^9, 
   3.696628865117481*^9, {3.696632783074006*^9, 3.696632793315854*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{Automatic, 66}, {Automatic, 220}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info803696602440-8466058"->{
  Cell[56909, 1327, 465, 11, 43, "Print",
   CellTags->"Info803696602440-8466058"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info803696602440-8466058", 366862, 7360}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 98, 1, 92, "Title"],
Cell[681, 25, 201, 4, 30, "Text"],
Cell[885, 31, 5502, 104, 336, "Text"],
Cell[6390, 137, 224, 4, 30, "Text"],
Cell[6617, 143, 5952, 116, 336, "Text"],
Cell[CellGroupData[{
Cell[12594, 263, 116, 1, 64, "Section"],
Cell[12713, 266, 248, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[12986, 275, 505, 13, 32, "Input"],
Cell[13494, 290, 591, 15, 39, "Output"]
}, Open  ]],
Cell[14100, 308, 131, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[14256, 313, 262, 6, 32, "Input"],
Cell[14521, 321, 330, 7, 43, "Output"]
}, Open  ]],
Cell[14866, 331, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[14993, 336, 402, 10, 32, "Input"],
Cell[15398, 348, 819, 20, 35, "Output"]
}, Open  ]],
Cell[16232, 371, 100, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[16357, 376, 342, 8, 32, "Input"],
Cell[16702, 386, 568, 14, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17307, 405, 132, 2, 32, "Input"],
Cell[17442, 409, 231, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17722, 418, 94, 1, 64, "Section"],
Cell[17819, 421, 237, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[18081, 429, 654, 17, 54, "Input"],
Cell[18738, 448, 375, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19150, 459, 558, 15, 54, "Input"],
Cell[19711, 476, 266, 5, 32, "Output"]
}, Open  ]],
Cell[19992, 484, 192, 4, 30, "Text"],
Cell[20187, 490, 6394, 130, 336, "Text"],
Cell[26584, 622, 124, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[26733, 627, 439, 13, 32, "Input"],
Cell[27175, 642, 467, 11, 32, "Output"]
}, Open  ]],
Cell[27657, 656, 117, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[27799, 661, 586, 16, 32, "Input"],
Cell[28388, 679, 475, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28900, 694, 667, 17, 32, "Input"],
Cell[29570, 713, 474, 9, 32, "Output"]
}, Open  ]],
Cell[30059, 725, 5564, 109, 336, "Text"],
Cell[CellGroupData[{
Cell[35648, 838, 375, 11, 32, "Input"],
Cell[36026, 851, 329, 10, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36392, 866, 222, 5, 32, "Input"],
Cell[36617, 873, 306, 9, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36972, 888, 110, 1, 64, "Section"],
Cell[37085, 891, 150, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[37260, 897, 752, 18, 32, "Input"],
Cell[38015, 917, 12415, 216, 254, "Output"]
}, Open  ]],
Cell[50445, 1136, 156, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[50626, 1143, 2827, 77, 117, "Input"],
Cell[53456, 1222, 1828, 49, 94, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55333, 1277, 129, 1, 64, "Section"],
Cell[55465, 1280, 272, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[55762, 1289, 343, 9, 32, "Input"],
Cell[56108, 1300, 647, 18, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56792, 1323, 114, 2, 32, "Input"],
Cell[56909, 1327, 465, 11, 43, "Print",
 CellTags->"Info803696602440-8466058"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57411, 1343, 439, 9, 32, "Input"],
Cell[57853, 1354, 587, 17, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58477, 1376, 745, 21, 32, "Input"],
Cell[59225, 1399, 603, 16, 54, "Output"]
}, Open  ]],
Cell[59843, 1418, 602, 15, 32, "Input"],
Cell[60448, 1435, 79, 1, 32, "Input"],
Cell[60530, 1438, 359, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[60914, 1454, 845, 19, 54, "Input"],
Cell[61762, 1475, 24686, 425, 254, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86485, 1905, 1875, 56, 138, "Input"],
Cell[88363, 1963, 780, 24, 76, "Output"],
Cell[89146, 1989, 783, 24, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89966, 2018, 2169, 65, 201, "Input"],
Cell[92138, 2085, 640, 19, 54, "Output"],
Cell[92781, 2106, 641, 19, 54, "Output"],
Cell[93425, 2127, 643, 19, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94105, 2151, 1499, 39, 180, "Input"],
Cell[95607, 2192, 36685, 710, 259, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132329, 2907, 2332, 52, 180, "Input"],
Cell[134664, 2961, 36900, 713, 259, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171601, 3679, 3469, 80, 243, "Input"],
Cell[175073, 3761, 80232, 1483, 257, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255342, 5249, 3655, 83, 285, "Input"],
Cell[259000, 5334, 102786, 1894, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361823, 7233, 214, 4, 32, "Input"],
Cell[362040, 7239, 107, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362184, 7245, 1944, 48, 180, "Input"],
Cell[364131, 7295, 2365, 49, 351, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)


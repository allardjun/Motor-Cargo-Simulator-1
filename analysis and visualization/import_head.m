function heads=import_head(params,localpath,run_name)
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/Matt/Google Drive/Allard Lab/Motor Freedom Project/src/macrun1
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/04/19 02:12:49

%% Initialize variables.
filename = [localpath '/' run_name '_Heads.txt'];
delimiter = ' ';
startRow = 2;

disp(['Importing heads from ' filename])
N=params.N;

%% Format string for each line of text:

%need a %f for each column of numbers to read in
%step, time, center x,y,z = 5
%x,y,z for each motor = 3*(N_k+N_d)
piece1=repmat('%f',1,3+3*(N(1)+N(2))+(N(1)+N(2)));
piece2='%[^\n\r]';

formatSpec=strcat(piece1,piece2);

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, ...
    'Delimiter', delimiter, 'MultipleDelimsAsOne', true, ...
    'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names

heads=struct;

%repeat = dataArray{:, 1};
step = dataArray{:, 2};
heads.t_arr = dataArray{:, 3};

heads.head_rec=cell(2,size(step,1));

last=3+3*(N(1)+N(2))+(N(1)+N(2));

heads.bound=cell(2,1);
heads.bound{1}=[dataArray{:,last-(N(1)+N(2))+1:last-N(2)}];
heads.bound{2}=[dataArray{:,last-N(2)+1:last}];

%%

temp=cell(2,max(N));

for m=1:2

    for n=1:N(m)

        ind=4+(m-1)*N(1)*3+(n-1)*3;
        temp{m,n}=[dataArray{ind} ...
            dataArray{ind+1} ...
            dataArray{ind+2}];

    end

end

%reformat to the shape motor_movie expects
for m=1:2
    temp2=zeros(N(m),3);
    for s=1:size(step,1)
        for n=1:N(m)
            temp2(n,:)=temp{m,n}(s,:);
        end
        heads.head_rec{m,s}=temp2;
    end
end


%% Clear temporary variables
%clearvars  m n s;
end